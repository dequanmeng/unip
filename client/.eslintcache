[{"/home/mhdi/Desktop/unip/client/src/components/dashboard/gatedetail/GateDetail.js":"1","/home/mhdi/Desktop/unip/client/src/components/dashboard/gatedetail/useritem/UserItem.js":"2","/home/mhdi/Desktop/unip/client/src/components/util/searchbar/SearchBar.js":"3","/home/mhdi/Desktop/unip/client/src/App.js":"4","/home/mhdi/Desktop/unip/client/src/util/PublicRoute.js":"5","/home/mhdi/Desktop/unip/client/src/util/ProtectedRoute.js":"6","/home/mhdi/Desktop/unip/client/src/config/config.js":"7","/home/mhdi/Desktop/unip/client/src/components/sidebar/SideBar.js":"8","/home/mhdi/Desktop/unip/client/src/components/logout/Logout.js":"9","/home/mhdi/Desktop/unip/client/src/components/admin/users/UsersPanel.js":"10","/home/mhdi/Desktop/unip/client/src/hooks/useFetch.js":"11","/home/mhdi/Desktop/unip/client/src/components/util/icon/icons.js":"12","/home/mhdi/Desktop/unip/client/src/components/admin/gates/deletegate/DeleteGate.js":"13","/home/mhdi/Desktop/unip/client/src/components/admin/users/adduser/AddUser.js":"14","/home/mhdi/Desktop/unip/client/src/reportWebVitals.js":"15","/home/mhdi/Desktop/unip/client/src/context/reducer.js":"16","/home/mhdi/Desktop/unip/client/src/components/login/Login.js":"17","/home/mhdi/Desktop/unip/client/src/components/dashboard/Dashboard.js":"18","/home/mhdi/Desktop/unip/client/src/hooks/useTime.js":"19","/home/mhdi/Desktop/unip/client/src/hooks/useSocket.js":"20","/home/mhdi/Desktop/unip/client/src/components/admin/gates/addgate/AddGate.js":"21","/home/mhdi/Desktop/unip/client/src/components/searchbar/SearchBar.js":"22"},{"size":8000,"mtime":1608412443366,"results":"23","hashOfConfig":"24"},{"size":1196,"mtime":1608400134883,"results":"25","hashOfConfig":"24"},{"size":444,"mtime":1608382617162,"results":"26","hashOfConfig":"24"},{"size":1753,"mtime":1607102004685,"results":"27","hashOfConfig":"24"},{"size":149,"mtime":1606679838211,"results":"28","hashOfConfig":"24"},{"size":151,"mtime":1606679830091,"results":"29","hashOfConfig":"24"},{"size":58,"mtime":1606672363076,"results":"30","hashOfConfig":"24"},{"size":212,"mtime":1606754733062,"results":"31","hashOfConfig":"24"},{"size":2216,"mtime":1607106265541,"results":"32","hashOfConfig":"24"},{"size":8110,"mtime":1608288796067,"results":"33","hashOfConfig":"24"},{"size":1708,"mtime":1608326661019,"results":"34","hashOfConfig":"24"},{"size":2167,"mtime":1607201106432,"results":"35","hashOfConfig":"24"},{"size":2367,"mtime":1607535788070,"results":"36","hashOfConfig":"24"},{"size":7868,"mtime":1607604837075,"results":"37","hashOfConfig":"24"},{"size":362,"mtime":1606648702579,"results":"38","hashOfConfig":"24"},{"size":515,"mtime":1606670285057,"results":"39","hashOfConfig":"24"},{"size":3079,"mtime":1606681302572,"results":"40","hashOfConfig":"24"},{"size":1172,"mtime":1608410642302,"results":"41","hashOfConfig":"24"},{"size":389,"mtime":1607755773231,"results":"42","hashOfConfig":"24"},{"size":990,"mtime":1608409505352,"results":"43","hashOfConfig":"24"},{"size":3683,"mtime":1607604821490,"results":"44","hashOfConfig":"24"},{"size":432,"mtime":1607019033939,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15vh2g4",{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mhdi/Desktop/unip/client/src/components/dashboard/gatedetail/GateDetail.js",["95","96","97","98","99","100","101","102","103","104","105"],"/home/mhdi/Desktop/unip/client/src/components/dashboard/gatedetail/useritem/UserItem.js",["106","107","108","109","110","111"],"import React, { useEffect, useState } from 'react'\nimport './UserItem.css'\nimport moment from 'moment';\nimport userIcon from './user.svg'\nimport { useFetch } from '../../../../hooks/useFetch';\n// import { useTime} from '../../../../hooks/useTime'\n// import { Badge } from '@material-ui/core'\n\nexport const UserItem = ({status,user,time,active}) => {\n//    const time =useTime()\n//    const {response,error,isLoading}=useFetch('/users/'+user)\n//    console.log(response,user,error);\n    return (\n        <div className=\"useritem\">\n            <div className=\"user_profile\">\n                \n              \n                    <img src={userIcon}/>\n              \n                <p>{user?.firstName+' '+user?.lastName}</p>\n            </div>\n        \n            <div className=\"user_status\">\n                <p>status: <span className={status&&active!=3?\"status-inside\":(active==3?\"status-yellow\":\"status-outside\")}>{status?\"inside\":\"outside\"}</span> </p>\n            </div>\n            <div className=\"user_last_activity\">\n                <p style={{marginRight:'1rem'}}>last activity: </p>\n                <span>{ moment(time).format('h:mm a')}</span>\n            </div>\n        </div>\n    )\n}\n",["112","113"],"/home/mhdi/Desktop/unip/client/src/components/util/searchbar/SearchBar.js",["114"],"/home/mhdi/Desktop/unip/client/src/App.js",["115","116","117"],"/home/mhdi/Desktop/unip/client/src/util/PublicRoute.js",[],"/home/mhdi/Desktop/unip/client/src/util/ProtectedRoute.js",[],"/home/mhdi/Desktop/unip/client/src/config/config.js",["118"],"/home/mhdi/Desktop/unip/client/src/components/sidebar/SideBar.js",[],"/home/mhdi/Desktop/unip/client/src/components/logout/Logout.js",["119","120","121","122","123"],"/home/mhdi/Desktop/unip/client/src/components/admin/users/UsersPanel.js",["124","125","126","127","128","129","130","131","132"],"import React, { useEffect, useState } from 'react'\nimport './UsersPanel.css'\nimport {useFetch }from './../../../hooks/useFetch'\nimport MaterialTable , { MTableToolbar }from 'material-table';\nimport Modal from '@material-ui/core/Modal';\nimport refresh from '@material-ui/icons/Refresh';\nimport moment from 'moment';\nimport Edit from '@material-ui/icons/Edit';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\n// import Delete from '@material-ui/icons/Delete';\n// import Icon from '@material-ui/core/Icon';\nimport {useHistory} from 'react-router-dom'\nimport Delete from './delete.svg'\nimport {icons }from './../../util/icon/icons'\nimport { AddUser } from './adduser/AddUser';\nimport { DeleteUser } from './deleteuser/DeleteUser';\nimport { ResetPassword } from './resetpassword/ResetPassword';\nimport config from './../../../config/config';\nimport { useCurrentUser } from '../../../hooks/useCurrentUser';\nexport const UsersPanel = () => {\n  const tableRef = React.createRef();\n   const res= useFetch('/users')\n  \n   const history=useHistory()\n  //  const [status, setstatus] = useState()\n   const [dopen, setdopen] = useState(false)\n   const [ddata, setddata] = useState('')\n   const [ropen, setropen] = useState(false)\n   const [rdata, setrdata] = useState('')\n   const [open, setOpen] = useState(false);\n   const [modalbody, setmodalbody] = useState('')\n   const [editdata, seteditdata] = useState({_id:\"\",email:\"\",firstName:\"\",lastName:\"\",phoneNumber:\"\",isAdmin:false})\n   const [editmode, seteditmode] = useState(false)\n   const user = useCurrentUser()\n \n// useEffect(() => {\n//   const cc =async()=>{\n//     const res = await fetch(\n//       config.baseUrl+'/users/currentuser',{\n//           method: 'GET',\n   \n//               headers:{\n//                 // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n//                 'Access-Control-Allow-Origin': \"*\",\n//                 'Access-Control-Allow-Headers': \"*\",\n//                 'Content-Type': 'application/json',\n//                 'x-auth-token': localStorage.getItem('token')\n//               }   \n//              }\n//     )    \n//  var user=await res.json()\n\n\n//   setuser(user.user)   \n//   }\n//     cc()\n// }, [])\n\n\n   const handleOpen = () => {\n     seteditmode(false)\n     setOpen(true);\n    //  seteditdata({editdata,hidepassword:false})\n    \n   };\n\n   const handleClose = () => {\n    setdopen(false)\n    setropen(false)\n     setOpen(false);\n     seteditdata({_id:\"\",email:\"\",firstName:\"\",lastName:\"\",phoneNumber:\"\",isAdmin:false})\n     window.location.reload()\n    };\n\n    const checkAccess=(id)=>{\n    \n        \n\n     var child=[]\n\n   \n   \n       user?.creatures?.map(c=>{\n        child.push(String(c._id))\n      })\n     \n      \n      // console.log(user._id==id );\n      // console.log(be.search('isSuperAdmin')!=-1 );\n      // console.log(child.includes(id));\n     \n      if (user?._id==id || user?.isSuperAdmin|| child.includes(id) ){\n          \n            return false\n      }else{\n          \n            return true\n      }  \n\n    }\n\n\n    return (\n        <div className=\"user-panel\">\n        <div className=\"table-container\" >\n           <MaterialTable\n  \n           icons={icons}\n              columns={[\n                { title: 'id', field: '_id' \n            ,render: row => <span>{ row[\"_id\"].substring( -1)  }</span>\n            },\n            { title: 'FirstName', field: 'firstName' ,cellStyle: {\n                  \n                color: 'green'\n              }},\n            { title: 'LastName', field: 'lastName' ,cellStyle: {\n                  \n                color: 'green'\n              }},\n                { title: 'Email', field: 'email'  , cellStyle: {\n                  \n                    color: 'blue'\n                  }, },\n       \n                { title: 'Phone', field: 'phoneNumber' },\n                { title: 'isAdmin', field: 'isAdmin' ,lookup:{ true: <span style={{color:'green'}}>&#10003;</span>, false: \"_\" }},\n                { title: 'isInside', field: 'isInside' ,lookup:{ true: <span style={{color:'red'}}>&#10003;</span>, false: \"_\" }},\n                { title: 'creator', field: 'creator' ,cellStyle: {\n                  \n                  color: 'orange'\n                }},\n                { title: 'createdAt', field: 'createdAt' ,\n            \n                render: row => <span>{ moment(row[\"createdAt\"]).format('lll')   }</span>\n            },\n                { title: 'updatedAt', field: 'updatedAt',  render: row => <span>{ moment(row[\"updatedAt\"]).fromNow()   }</span> }\n              ]}\n\n           data={res.response}\n           title={'Users'}\n           actions={[\n            rowData => ( {\n              icon: () => <Edit color={ 'primary'} />,\n              tooltip: 'Edit User',\n              onClick: (event, rowData) => {\n              //  history.push({\n              //   pathname: '/users/edit',\n                \n              //   state: {data:rowData}\n              // })\n\n              \n              seteditdata(rowData)\n              seteditmode(true)\n              setOpen(true)\n              // seteditdata({editdata,hidepassword:true})\n\n              },\n              disabled: checkAccess(rowData['_id'])\n              // disabled: rowData.isAdmin==true\n        \n            }),\n            rowData => ({\n              icon: () =><img style={{width:'1.25rem'}} src={Delete} /> ,\n              tooltip: 'Delete User',\n              onClick: (event, rowData) => {\n                setdopen(true)\n                setddata(rowData)\n              \n              }\n              ,\n              disabled: checkAccess(rowData['_id'])\n              // },\n              // disabled: rowData.isAdmin==true\n            }),\n            rowData => ( {\n              icon: () => < VpnKeyIcon/>,\n              tooltip: 'change password',\n              onClick: (event, rowData) => {\n              //  history.push({\n              //   pathname: '/users/changepassword',\n              // var re=checkAccess(rowData['_id']).then((res)=>{return res})\n              // console.log(re);\n           \n              //   state: {data:rowData}\n              // })\n              // console.log(cc(rowData['_id']));\n              setrdata(rowData)\n              setropen(true)\n              },\n              disabled: checkAccess(rowData['_id'])\n        \n            }),\n\n            {\n              icon: refresh,\n              tooltip: 'Refresh Data',\n              isFreeAction: true,\n              onClick: () => window.location.reload()\n            }\n           \n          ]}\n\n          components={{\n            Toolbar: props => (\n              <div>\n                <MTableToolbar {...props} />\n                <div className=\"adduserbtn-container\">\n                  <button className=\"adduser-btn\" onClick={()=>{handleOpen()}}>+ add user</button>\n           \n                </div>\n              </div>\n            )\n          }\n        }\n\n        options={{\n          exportButton: true\n        }}\n\n\n           />\n           </div>\n\n\n           <Modal\n            open={open}\n            onClose={handleClose}\n            style={{backgroundColor: 'rgba(0,0,0,0.9)'}}\n            \n            // aria-labelledby=\"simple-modal-title\"\n            // aria-describedby=\"simple-modal-description\"\n           >\n            <AddUser handleClose={handleClose} edata={editdata} editmode={editmode}/>\n           </Modal>\n\n\n   \n            <Modal \n               open={dopen}\n               onClose={handleClose}\n               style={{backgroundColor: 'rgba(0,0,0,0.9)'}}\n            \n            >\n              <DeleteUser ddata={ddata} close={handleClose}/>\n            </Modal>\n\n\n             \n            <Modal \n               open={ropen}\n               onClose={handleClose}\n               style={{backgroundColor: 'rgba(0,0,0,0.9)'}}\n            \n            >\n              <ResetPassword rdata={rdata} close={handleClose}/>\n            </Modal>\n\n\n\n\n\n        </div>\n    )\n}\n\n// createdAt: \"2020-11-27T13:17:10.117Z\"\n// email: \"m@google.com\"\n// id: \"5fc0fc567fa94525beb23b27\"\n// updatedAt: \"2020-11-27T13:17:10.117Z\"\n// __v: 0\n// _id: \"5fc0fc567fa94525beb23b27\"\n","/home/mhdi/Desktop/unip/client/src/hooks/useFetch.js",["133"],"import React from 'react'\n\n\n// import axios from 'axios';\nimport config from '../config/config';\n\nexport const useFetch = (url, options={}) => {\n    // url, options\n  \n\n        const [response, setResponse] = React.useState([]);\n      \n        const [error, setError] = React.useState(null);\n        const [isLoading, setIsLoading] = React.useState(false);\n        React.useEffect(() => {\n          const fetchData = async () => {\n            setIsLoading(true);\n            try {\n              const res = await fetch(\n                config.baseUrl+url,{\n                    method:'GET',\n                        headers:{\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }   \n                       }\n              )    \n              const data=await res.json()  \n              console.log('----useFetch----')\n              console.log(data)\n              console.log('----------------')\n           \n              if (data.length || data?.user){\n                setResponse(data);\n               \n                setIsLoading(false)\n            \n              }else{\n                setIsLoading(false)\n                setError(data);\n              }\n      \n\n            } catch (err) {\n              setError(err);\n            }\n          };\n          fetchData();\n        }, []);\n        return { response, error, isLoading };\n         \n \n}\n      // await axios.get(config.baseUrl+url,{\n            //     headers:{\n            //         'Content-Type': 'application/json',\n            //         'x-auth-token': localStorage.getItem('token')\n            //     }   \n            //    });","/home/mhdi/Desktop/unip/client/src/components/util/icon/icons.js",[],"/home/mhdi/Desktop/unip/client/src/components/admin/gates/deletegate/DeleteGate.js",["134"],"/home/mhdi/Desktop/unip/client/src/components/admin/users/adduser/AddUser.js",["135","136","137","138","139","140","141"],"import React, { useState } from 'react'\nimport './AddUser.css'\nimport Email from './../../../login/email.png'\nimport invisible from './../../../login/invisible.svg'\nimport view from './../../../login/view.svg'\nimport AdminIcon from './management.svg'\nimport callIcon from './call.svg'\nimport fnIcon from './user.svg'\nimport lnIcon from './name.svg'\nimport { Button, Checkbox } from '@material-ui/core'\nimport config from './../../../../config/config';\n// import { usePost } from '../../../../hooks/usePost'\n// import {Post} from './../../../../util/Post.js'\n\nexport const AddUser = ({edata,handleClose,editmode}) => {\n   const [firstName, setfirstName] = useState(edata.firstName)\n   const [lastName, setlastName] = useState(edata.lastName)\n   const [password, setpassword] = useState('')\n   const [phoneNumber, setphoneNumber] = useState(edata.phoneNumber)\n   const [email, setemail] = useState(edata.email);\n   const [id, setid] = useState(edata._id)\n   const [isAdmin, setisadmin] = useState(edata.isAdmin)\n   const [active, setactive] = useState(false)\n   const [errorMsg, seterrorMsg] = useState({email:\"\",password:\"\",firstName:\"\",lastName:\"\",phoneNumber:\"\"})\n   const [response, setresponse] = useState('')\n   console.log(edata);\n   const handleSubmit=async (e)=>{\n    e.preventDefault();\n\n\n    try {\n        const res = await fetch(\n          config.baseUrl+'/users',{\n              method: editmode?'PATCH':'Post',\n            //   mode : 'cors',\n              body: JSON.stringify(\n\n                {       id,\n                        firstName,\n                        lastName,\n                        password,\n                        phoneNumber,\n                        email,\n                        isAdmin\n                        \n                    }\n\n              ),\n                  headers:{\n                    // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n                    'Access-Control-Allow-Origin': \"*\",\n                    'Access-Control-Allow-Headers': \"*\",\n                      'Content-Type': 'application/json',\n                      'x-auth-token': localStorage.getItem('token')\n                  }   \n                 }\n        )    \n        const data=await res.json()  \n        console.log('----Post----')\n        console.log(data)\n        console.log('----------------')\n     \n        if (data.user || data.cdata){\n          setresponse(data)\n          seterrorMsg({email:\"\",password:\"\",firstName:\"\",lastName:\"\",phoneNumber:\"\"})\n        }else{\n            setresponse(\"\")\n            seterrorMsg(data.errors) \n\n        }\n\n\n      } catch (err) {\n        seterrorMsg(err) \n      }\n  \n\n\n\n\n\n\n\n\n\n\n\n}\n\n    return (\n        <div className=\"adduser-container\">\n        <form className=\"adduser-form\" onSubmit={(e)=>{handleSubmit(e)}}>\n       <p style={{fontSize:\"20px\"}}>{editmode?'Edit user':'Define user'}</p>\n      <div className=\"id-container\">\n                <div className=\"input-container\">\n                                <div className=\"icon\">\n                                <img src={fnIcon} />\n                                </div>\n                                \n                                <input  className=\"input-field\" type=\"text\" minLength=\"2\" placeholder=\"first name\" required \n                                    value={firstName}\n                                    onChange={(e)=>{setfirstName(e.target.value)}}\n                                />\n                            \n                    </div>\n                    <div className=\"input-container ml\">\n                                <div className=\"icon\">\n                                <img src={lnIcon} />\n                                </div>\n                                \n                                <input  className=\"input-field\" type=\"text\" minLength=\"2\" placeholder=\"last name\" required \n                                    value={lastName}\n                                    onChange={(e)=>{setlastName(e.target.value)}}\n                                />\n                            \n                    </div>\n\n                     \n\n\n\n\n\n      </div>\n      <div className=\"contact-container\">\n          \n          <div className=\"input-container\">\n                    <div className=\"icon\">\n                      <img src={Email} />\n                      </div>\n                    \n                      <input  className=\"input-field\" type=\"email\" placeholder=\"email\" required \n                        value={email}\n                        onChange={(e)=>{setemail(e.target.value)}}\n                      />\n                  \n          </div>\n          <div className=\"input-container ml\">\n                    <div className=\"icon\">\n                      <img src={callIcon} />\n                      </div>\n                    \n                      <input \n                       className=\"input-field\"\n                        type=\"tel\"\n                         placeholder=\"0917-000-00-00\"\n                         pattern=\"[0-9]{4}[0-9]{3}[0-9]{2}[0-9]{2}\"\n                         required \n                        value={phoneNumber}\n                        onChange={(e)=>{setphoneNumber(e.target.value)}}\n                      />\n                  \n          </div>\n\n\n\n      </div>\n      <div className=\"security-container\">\n{ !editmode&&           <div className=\"input-container\" >\n                        <div className=\"icon\" onClick={()=>{setactive(pre=>!pre)}} style={{cursor:\"pointer\"}}>\n                            <img src={active ? invisible:view} />\n                            </div>\n                            <input className=\"input-field\" type={active?\"password\":\"text\"} \n                            placeholder=\"password\" name=\"usrnm\" required minLength=\"8\"\n                            value={password}\n                            onChange={(e)=>{setpassword(e.target.value)}}\n                            />\n                        \n            </div>}\n            <div className={`input-container ${!editmode &&'ml'}`} >\n                      <div className=\"icon\" >\n                          <img src={AdminIcon} />\n                      </div>\n                      <div className=\"input-field input-field-checkbox\">\n                          <div className=\"checkbox-container\" >\n                            <p>set as Admin</p>\n                            <Checkbox style={{color:'var(--color-green)'}} checked={isAdmin} onChange={(e)=>{setisadmin(e.target.checked)}}  />\n                          </div>\n                      </div>\n                        \n\n                      \n            </div>\n        </div>\n           { errorMsg.email &&<p className=\"adduser-error\">{errorMsg.email}</p>}\n           { errorMsg.password && <p className=\"adduser-error\">{errorMsg.password}</p>}\n            { errorMsg.firstName && <p className=\"adduser-error\">{errorMsg.firstName}</p>}\n            { errorMsg.lastName && <p className=\"adduser-error\">{errorMsg.lastName}</p>}\n            { errorMsg.phoneNumber &&<p className=\"adduser-error\">{errorMsg.phoneNumber}</p>}\n             {(response && !editmode) ? <p style={{color:'green'}}>successful!</p>:''}\n    {response?.cdata?.length?(<><span style={{color:'orange'}}>{ response.cdata.join(' , ')}</span><p style={{color:'green',marginTop:'.5rem'}}> successfully changed !</p></>):''}\n            <div className=\"adduser-button-container\">\n                    <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\n                    Cansel\n                    </Button>\n                    <Button type=\"submit\" variant=\"contained\" style={{background:'var(--color-green)',color:'white',    padding: '6px 30px',\n                        fontSize: '0.875rem',\n                        minWidth: '64px'}} >\n                    Save\n                    </Button>\n            </div>\n            </form>\n      </div>\n    )\n}\n","/home/mhdi/Desktop/unip/client/src/reportWebVitals.js",[],"/home/mhdi/Desktop/unip/client/src/context/reducer.js",[],"/home/mhdi/Desktop/unip/client/src/components/login/Login.js",["142","143","144"],"/home/mhdi/Desktop/unip/client/src/components/dashboard/Dashboard.js",[],"/home/mhdi/Desktop/unip/client/src/hooks/useTime.js",[],"/home/mhdi/Desktop/unip/client/src/hooks/useSocket.js",["145"],"/home/mhdi/Desktop/unip/client/src/components/admin/gates/addgate/AddGate.js",["146","147","148","149"],"/home/mhdi/Desktop/unip/client/src/components/searchbar/SearchBar.js",["150"],{"ruleId":"151","severity":1,"message":"152","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":17},{"ruleId":"151","severity":1,"message":"155","line":34,"column":19,"nodeType":"153","messageId":"154","endLine":34,"endColumn":30},{"ruleId":"156","severity":1,"message":"157","line":80,"column":19,"nodeType":"158","messageId":"159","endLine":80,"endColumn":25},{"ruleId":"160","severity":1,"message":"161","line":177,"column":8,"nodeType":"162","messageId":"163","endLine":177,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":204,"column":69,"nodeType":"166","messageId":"167","endLine":204,"endColumn":71},{"ruleId":"164","severity":1,"message":"165","line":206,"column":52,"nodeType":"166","messageId":"167","endLine":206,"endColumn":54},{"ruleId":"164","severity":1,"message":"165","line":207,"column":50,"nodeType":"166","messageId":"167","endLine":207,"endColumn":52},{"ruleId":"164","severity":1,"message":"165","line":208,"column":48,"nodeType":"166","messageId":"167","endLine":208,"endColumn":50},{"ruleId":"164","severity":1,"message":"165","line":213,"column":69,"nodeType":"166","messageId":"167","endLine":213,"endColumn":71},{"ruleId":"164","severity":1,"message":"165","line":219,"column":69,"nodeType":"166","messageId":"167","endLine":219,"endColumn":71},{"ruleId":"164","severity":1,"message":"165","line":226,"column":69,"nodeType":"166","messageId":"167","endLine":226,"endColumn":71},{"ruleId":"151","severity":1,"message":"168","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"169","line":1,"column":28,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"170","line":5,"column":10,"nodeType":"153","messageId":"154","endLine":5,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":18,"column":21,"nodeType":"173","endLine":18,"endColumn":42},{"ruleId":"164","severity":1,"message":"174","line":24,"column":59,"nodeType":"166","messageId":"167","endLine":24,"endColumn":61},{"ruleId":"164","severity":1,"message":"165","line":24,"column":86,"nodeType":"166","messageId":"167","endLine":24,"endColumn":88},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"171","severity":1,"message":"172","line":8,"column":15,"nodeType":"173","endLine":8,"endColumn":39},{"ruleId":"151","severity":1,"message":"169","line":2,"column":17,"nodeType":"153","messageId":"154","endLine":2,"endColumn":25},{"ruleId":"151","severity":1,"message":"179","line":21,"column":18,"nodeType":"153","messageId":"154","endLine":21,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":44,"column":7,"nodeType":"162","endLine":44,"endColumn":13,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":3,"column":1,"nodeType":"185","endLine":6,"endColumn":2},{"ruleId":"151","severity":1,"message":"169","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"186","line":4,"column":12,"nodeType":"153","messageId":"154","endLine":4,"endColumn":20},{"ruleId":"151","severity":1,"message":"187","line":9,"column":9,"nodeType":"153","messageId":"154","endLine":9,"endColumn":17},{"ruleId":"188","severity":1,"message":"189","line":10,"column":10,"nodeType":"190","messageId":"167","endLine":10,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":60,"column":19,"nodeType":"173","endLine":60,"endColumn":66},{"ruleId":"151","severity":1,"message":"168","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"191","line":19,"column":8,"nodeType":"153","messageId":"154","endLine":19,"endColumn":14},{"ruleId":"151","severity":1,"message":"192","line":22,"column":9,"nodeType":"153","messageId":"154","endLine":22,"endColumn":17},{"ruleId":"151","severity":1,"message":"193","line":25,"column":10,"nodeType":"153","messageId":"154","endLine":25,"endColumn":17},{"ruleId":"151","severity":1,"message":"194","line":32,"column":11,"nodeType":"153","messageId":"154","endLine":32,"endColumn":20},{"ruleId":"151","severity":1,"message":"195","line":32,"column":22,"nodeType":"153","messageId":"154","endLine":32,"endColumn":34},{"ruleId":"156","severity":1,"message":"157","line":84,"column":30,"nodeType":"196","messageId":"197","endLine":84,"endColumn":32},{"ruleId":"164","severity":1,"message":"165","line":93,"column":20,"nodeType":"166","messageId":"167","endLine":93,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":166,"column":26,"nodeType":"173","endLine":166,"endColumn":72},{"ruleId":"180","severity":1,"message":"198","line":49,"column":12,"nodeType":"162","endLine":49,"endColumn":14,"suggestions":"199"},{"ruleId":"171","severity":1,"message":"172","line":56,"column":16,"nodeType":"173","endLine":56,"endColumn":63},{"ruleId":"151","severity":1,"message":"200","line":21,"column":15,"nodeType":"153","messageId":"154","endLine":21,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":97,"column":33,"nodeType":"173","endLine":97,"endColumn":53},{"ruleId":"171","severity":1,"message":"172","line":108,"column":33,"nodeType":"173","endLine":108,"endColumn":53},{"ruleId":"171","severity":1,"message":"172","line":129,"column":23,"nodeType":"173","endLine":129,"endColumn":42},{"ruleId":"171","severity":1,"message":"172","line":140,"column":23,"nodeType":"173","endLine":140,"endColumn":45},{"ruleId":"171","severity":1,"message":"172","line":161,"column":29,"nodeType":"173","endLine":161,"endColumn":66},{"ruleId":"171","severity":1,"message":"172","line":172,"column":27,"nodeType":"173","endLine":172,"endColumn":50},{"ruleId":"188","severity":1,"message":"189","line":17,"column":10,"nodeType":"190","messageId":"167","endLine":17,"endColumn":12},{"ruleId":"171","severity":1,"message":"172","line":65,"column":19,"nodeType":"173","endLine":65,"endColumn":38},{"ruleId":"171","severity":1,"message":"172","line":77,"column":19,"nodeType":"173","endLine":77,"endColumn":56},{"ruleId":"180","severity":1,"message":"201","line":25,"column":8,"nodeType":"162","endLine":25,"endColumn":39,"suggestions":"202"},{"ruleId":"151","severity":1,"message":"203","line":11,"column":18,"nodeType":"153","messageId":"154","endLine":11,"endColumn":26},{"ruleId":"151","severity":1,"message":"200","line":12,"column":15,"nodeType":"153","messageId":"154","endLine":12,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":18,"column":13,"nodeType":"166","messageId":"167","endLine":18,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":85,"column":33,"nodeType":"173","endLine":85,"endColumn":52},{"ruleId":"171","severity":1,"message":"172","line":8,"column":15,"nodeType":"173","endLine":8,"endColumn":39},"no-unused-vars","'CheckIcon' is defined but never used.","Identifier","unusedVar","'isConnected' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","'useFetch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","no-native-reassign",["204"],"no-negated-in-lhs",["205"],"'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["206"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Redirect' is defined but never used.","'location' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'config' is defined but never used.","'tableRef' is assigned a value but never used.","'history' is assigned a value but never used.","'modalbody' is assigned a value but never used.","'setmodalbody' is assigned a value but never used.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["207"],"'setid' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["208"],"'setcname' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [auth, dispatch]",{"range":"215","text":"216"},"Update the dependencies array to be: [url]",{"range":"217","text":"218"},"Update the dependencies array to be: [serverUrl, topic, isConnected, options]",{"range":"219","text":"220"},[1170,1176],"[auth, dispatch]",[1394,1396],"[url]",[880,911],"[serverUrl, topic, isConnected, options]"]