[{"/home/mhdi/Desktop/unip/client/src/components/dashboard/gatedetail/GateDetail.js":"1","/home/mhdi/Desktop/unip/client/src/components/dashboard/gatedetail/useritem/UserItem.js":"2","/home/mhdi/Desktop/unip/client/src/components/util/searchbar/SearchBar.js":"3","/home/mhdi/Desktop/unip/client/src/App.js":"4","/home/mhdi/Desktop/unip/client/src/util/PublicRoute.js":"5","/home/mhdi/Desktop/unip/client/src/util/ProtectedRoute.js":"6","/home/mhdi/Desktop/unip/client/src/config/config.js":"7","/home/mhdi/Desktop/unip/client/src/components/sidebar/SideBar.js":"8","/home/mhdi/Desktop/unip/client/src/components/logout/Logout.js":"9","/home/mhdi/Desktop/unip/client/src/components/admin/users/UsersPanel.js":"10","/home/mhdi/Desktop/unip/client/src/hooks/useFetch.js":"11","/home/mhdi/Desktop/unip/client/src/components/util/icon/icons.js":"12","/home/mhdi/Desktop/unip/client/src/components/admin/gates/deletegate/DeleteGate.js":"13","/home/mhdi/Desktop/unip/client/src/components/admin/users/adduser/AddUser.js":"14","/home/mhdi/Desktop/unip/client/src/reportWebVitals.js":"15","/home/mhdi/Desktop/unip/client/src/context/reducer.js":"16","/home/mhdi/Desktop/unip/client/src/components/login/Login.js":"17","/home/mhdi/Desktop/unip/client/src/components/dashboard/Dashboard.js":"18","/home/mhdi/Desktop/unip/client/src/hooks/useTime.js":"19","/home/mhdi/Desktop/unip/client/src/hooks/useSocket.js":"20","/home/mhdi/Desktop/unip/client/src/components/admin/gates/addgate/AddGate.js":"21","/home/mhdi/Desktop/unip/client/src/components/searchbar/SearchBar.js":"22","/home/mhdi/Desktop/unip/client/src/index.js":"23","/home/mhdi/Desktop/unip/client/src/hooks/useCurrentUser.js":"24","/home/mhdi/Desktop/unip/client/src/components/sidebar/navbar/NavBar.js":"25","/home/mhdi/Desktop/unip/client/src/components/AppRouter/AppRouter.js":"26","/home/mhdi/Desktop/unip/client/src/components/insight/Insight.js":"27","/home/mhdi/Desktop/unip/client/src/context/StateProvider.js":"28","/home/mhdi/Desktop/unip/client/src/components/admin/gates/GatesPanel.js":"29","/home/mhdi/Desktop/unip/client/src/components/util/card/Card.js":"30","/home/mhdi/Desktop/unip/client/src/components/admin/AdminPanel.js":"31","/home/mhdi/Desktop/unip/client/src/components/admin/users/deleteuser/DeleteUser.js":"32","/home/mhdi/Desktop/unip/client/src/components/admin/users/resetpassword/ResetPassword.js":"33"},{"size":8000,"mtime":1608412443366,"results":"34","hashOfConfig":"35"},{"size":1196,"mtime":1608400134883,"results":"36","hashOfConfig":"35"},{"size":444,"mtime":1608382617162,"results":"37","hashOfConfig":"35"},{"size":1753,"mtime":1607102004685,"results":"38","hashOfConfig":"35"},{"size":149,"mtime":1606679838211,"results":"39","hashOfConfig":"35"},{"size":151,"mtime":1606679830091,"results":"40","hashOfConfig":"35"},{"size":58,"mtime":1606672363076,"results":"41","hashOfConfig":"35"},{"size":212,"mtime":1606754733062,"results":"42","hashOfConfig":"35"},{"size":2216,"mtime":1607106265541,"results":"43","hashOfConfig":"35"},{"size":8110,"mtime":1608288796067,"results":"44","hashOfConfig":"35"},{"size":1708,"mtime":1608326661019,"results":"45","hashOfConfig":"35"},{"size":2167,"mtime":1607201106432,"results":"46","hashOfConfig":"35"},{"size":2367,"mtime":1607535788070,"results":"47","hashOfConfig":"35"},{"size":7866,"mtime":1608561945229,"results":"48","hashOfConfig":"35"},{"size":362,"mtime":1606648702579,"results":"49","hashOfConfig":"35"},{"size":515,"mtime":1606670285057,"results":"50","hashOfConfig":"35"},{"size":3079,"mtime":1606681302572,"results":"51","hashOfConfig":"35"},{"size":1172,"mtime":1608410642302,"results":"52","hashOfConfig":"35"},{"size":389,"mtime":1607755773231,"results":"53","hashOfConfig":"35"},{"size":990,"mtime":1608409505352,"results":"54","hashOfConfig":"35"},{"size":3683,"mtime":1607604821490,"results":"55","hashOfConfig":"35"},{"size":432,"mtime":1607019033939,"results":"56","hashOfConfig":"35"},{"size":705,"mtime":1606670574299,"results":"57","hashOfConfig":"35"},{"size":1515,"mtime":1607638862044,"results":"58","hashOfConfig":"35"},{"size":2237,"mtime":1608452376299,"results":"59","hashOfConfig":"35"},{"size":1480,"mtime":1608451075881,"results":"60","hashOfConfig":"35"},{"size":10985,"mtime":1608532937663,"results":"61","hashOfConfig":"35"},{"size":487,"mtime":1606670285053,"results":"62","hashOfConfig":"35"},{"size":8388,"mtime":1607639456400,"results":"63","hashOfConfig":"35"},{"size":527,"mtime":1607098182778,"results":"64","hashOfConfig":"35"},{"size":877,"mtime":1607102095323,"results":"65","hashOfConfig":"35"},{"size":2394,"mtime":1607461305243,"results":"66","hashOfConfig":"35"},{"size":4061,"mtime":1607531424434,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"15vh2g4",{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"75"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"75"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"75"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"75"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mhdi/Desktop/unip/client/src/components/dashboard/gatedetail/GateDetail.js",["154","155","156","157","158","159","160","161","162","163","164"],"import React, { useEffect, useState } from 'react'\nimport { useLocation, useParams } from 'react-router-dom';\nimport './GateDetail.css'\nimport ArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport ArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport ArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport moment from 'moment'\nimport { Button } from '@material-ui/core';\nimport { SearchBar } from '../../util/searchbar/SearchBar';\nimport { UserItem } from './useritem/UserItem';\nimport { useTime} from '../../../hooks/useTime'\nimport config from './../../../config/config'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport useSocket from './../../../hooks/useSocket'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nexport const GateDetail = () => {\n    let { gate } = useParams();\n    const time=useTime()\n    const location = useLocation();\n    const [open, setOpen] = useState(false);\n    // const [gatedata, setgatedata] = useState()\n    const [active, setactive] = useState(0)\n    const [data, setdata] = useState([])\n    const [filtercon, setfiltercon] = useState()\n    const [error, setError] = useState({errors:''})\n    const [url, seturl] = useState('/gates/data/today/'+gate+'/0')\n    // const [filterstatus, setfilterstatus] = useState()\n    const { temp, isConnected } = useSocket(`ws://localhost:4000/${location.state.topic}`, {\n             query: {\n                 apiKey: location.state.apiKey\n               }\n              },'msg');\n    const handleFilterClick =(current)=>{\n             setactive(current)\n             seturl('/gates/data/today/'+gate+'/'+current)\n            //  filterbtn(current)\n    }\n\n    const handleClick = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      setOpen(false);\n    };\n\n\n\n\n\n    const filter=(e)=>{\n    //  console.log(filtercon.data);\n     //+' '+item.firstName+' '+item.status+' '+item.time\n     var temp=[]\n   \n      filtercon?.map(\n                 item => {\n                   var c=item.status?'inside':'outside';\n                   var d=item.firstName+' '+item.lastName+' '+c+' '+moment(item.time).format('LTS')\n                   console.log(e.target.value);\n                   console.log(d.toLowerCase());\n                   console.log(d.toLowerCase().includes(e.target.value.toLowerCase()) );\n                   if(d.toLowerCase().includes(e.target.value.toLowerCase()) ){\n                     temp.push(item)\n                     console.log(item);\n                   }else{\n\n                   }\n\n                  return\n                  \n                  }\n             )\n         \n           \n            \n             setdata(temp)\n            \n             \n   }\n\n  //  const filterbtn=(con)=>{\n  //    var temp=[]\n  //         if(con==2){\n  //           filtercon?.map(\n  //             item => {\n  //               if(item.status ){\n  //                 temp.push(item)\n  //                 console.log(item);\n  //               }\n\n  //              return\n               \n  //              }\n  //         )\n  //         }else if(con==1){\n\n  //           filtercon?.map(\n  //             item => {\n  //               if(!item.status ){\n  //                 temp.push(item)\n  //                 console.log(item);\n  //               }\n\n  //              return\n               \n  //              }\n  //         )\n \n  //         }\n  //         setdata(temp)\n        \n\n  //  }\n\n useEffect(() => {\n     handleClick()\n }, [temp.data])\n\n\n\n\n    useEffect(() => {\n      const fetchData=async()=>{\n\n       \n        try {\n          const res = await fetch(\n            config.baseUrl+url,{\n                method:'GET',\n                    headers:{\n                        'Content-Type': 'application/json',\n                        'x-auth-token': localStorage.getItem('token')\n                    }   \n                   }\n          )    \n          const data=await res.json()  \n          console.log('----useFetch----')\n          console.log(data)\n          console.log('----------------')\n       \n          if (!data?.data?.length)\n             setError(data)\n\n\n\n\n            setdata(data.data);\n            setfiltercon(data.data)\n            \n        \n          // }else{\n          \n          //   setdata(data);\n          // }\n  \n\n        } catch (err) {\n            \n          setError(err);\n        }\n\n      }\n\n\n      fetchData()\n    }, [,url,temp.data])\n\n\n    // useEffect(() => {\n    //   setdata(filtercon)\n  \n      \n    // }, [filtercon])\n\n\n\n\n    return (\n        <div  className=\"gate_detail\">\n            <div className=\"gate_detail_container\">\n            <div className=\"gate_detail_header\">\n                <div className=\"gate_name\">\n                <p  >{gate}</p>\n                </div>\n                <div className=\"gate_detail_date\">\n                    <AccessTimeIcon/>\n                  {/* {moment().format('MMM Do , h:mm a')} */}\n                  <p>{time}</p>\n                </div>\n                <SearchBar filter={filter}/>\n                <div className=\"gate_detail_counter\">\n                   <div>\n                        <Button className={`gate_header_btn ${active==0&&'bordergreen'}` } onClick={()=>{handleFilterClick(0)}}>\n                           \n                            <p style={{color:active==0?\n                                   'white':active==1?\n                                   'red':active==2?\n                                   'green':'yellow'}}> {data?.length?data?.length:0}</p>\n                        </Button>\n                   </div>\n                   <div>\n                        <Button className={`gate_header_btn ${active==2&&'bordergreen'}` } onClick={()=>{handleFilterClick(2)}} >\n                            <ArrowDownIcon style={{color:\"green\"}}/>\n                          \n                        </Button>\n                    </div>\n                    <div>\n                        <Button className={`gate_header_btn ${active==1&&'bordergreen'}` } onClick={()=>{handleFilterClick(1)}}>\n                            <ArrowUpIcon style={{color:\"red\"}} /> \n                            \n                        </Button>\n                   </div>\n\n                    <div>\n                        <Button className={`gate_header_btn ${active==3&&'bordergreen'}` } onClick={()=>{handleFilterClick(3)}} >\n                            <ArrowRightIcon style={{color:\"yellow\"}}/>\n                            \n                        </Button>\n                    </div>\n\n                    {/* <div>\n                        <Button className={`gate_header_btn ${active==4&&'bordergreen'}` } onClick={()=>{handleFilterClick(4)}} >\n                            <CheckIcon style={{color:\"var(--color-green)\"}}/>\n                            <p>0</p>\n                        </Button>\n                    </div> */}\n                </div>\n\n            </div>\n             <div className=\"gate_detail_main\" >\n                  {data?.map(item=>{\n\n                       return <UserItem status={item.status} user={{id:item.user,lastName:item.lastName,firstName:item.firstName}} time={item.time} active={active}/>\n                  })}\n                   \n                 { !data && <p  style={{marginTop:'2rem',color:\"rgba(255,255,255,0.7)\"}}>{error.errors}</p>}\n                \n                    \n\n             </div>\n  {  temp?.data&&(<Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={temp?.data?.isInside?'success':'error'}>\n                  {temp?.data?.firstName+ ' '+temp?.data?.lastName +' '}{temp?.data?.isInside?'entered':'left'}\n                </Alert>\n                </Snackbar>)}\n\n            </div>\n        </div>\n    )\n}\n",["165","166"],"/home/mhdi/Desktop/unip/client/src/components/dashboard/gatedetail/useritem/UserItem.js",["167","168","169","170","171","172"],"import React, { useEffect, useState } from 'react'\nimport './UserItem.css'\nimport moment from 'moment';\nimport userIcon from './user.svg'\nimport { useFetch } from '../../../../hooks/useFetch';\n// import { useTime} from '../../../../hooks/useTime'\n// import { Badge } from '@material-ui/core'\n\nexport const UserItem = ({status,user,time,active}) => {\n//    const time =useTime()\n//    const {response,error,isLoading}=useFetch('/users/'+user)\n//    console.log(response,user,error);\n    return (\n        <div className=\"useritem\">\n            <div className=\"user_profile\">\n                \n              \n                    <img src={userIcon}/>\n              \n                <p>{user?.firstName+' '+user?.lastName}</p>\n            </div>\n        \n            <div className=\"user_status\">\n                <p>status: <span className={status&&active!=3?\"status-inside\":(active==3?\"status-yellow\":\"status-outside\")}>{status?\"inside\":\"outside\"}</span> </p>\n            </div>\n            <div className=\"user_last_activity\">\n                <p style={{marginRight:'1rem'}}>last activity: </p>\n                <span>{ moment(time).format('h:mm a')}</span>\n            </div>\n        </div>\n    )\n}\n",["173","174"],"/home/mhdi/Desktop/unip/client/src/components/util/searchbar/SearchBar.js",["175"],"import React from 'react'\nimport './SearchBar.css'\nimport searchicon from './search.svg'\nexport const SearchBar = ({filter}) => {\n    return (\n        <div className=\"searchbar\" >\n            <div className=\"search-icon-container\">\n              <img src={searchicon} />\n             \n            </div>\n            <input type=\"text\"  className=\"search-input\" onChange={(e)=>{filter(e)}} placeholder=\"search...\" id=\"\"/>\n        </div>\n    )\n}\n","/home/mhdi/Desktop/unip/client/src/App.js",["176","177","178"],"/home/mhdi/Desktop/unip/client/src/util/PublicRoute.js",[],"/home/mhdi/Desktop/unip/client/src/util/ProtectedRoute.js",[],"/home/mhdi/Desktop/unip/client/src/config/config.js",["179"],"\n\nexport default  {\n\n    baseUrl:\"http://localhost:4000\"\n}","/home/mhdi/Desktop/unip/client/src/components/sidebar/SideBar.js",[],"/home/mhdi/Desktop/unip/client/src/components/logout/Logout.js",["180","181","182","183","184"],"import React, { useState } from 'react'\r\n\r\nimport \"./Logout.css\"\r\nimport {   Redirect, useHistory,useLocation,withRouter } from 'react-router-dom';\r\nimport { useStateValue } from '../../context/StateProvider';\r\nimport logouticon from './logout.svg'\r\nconst Logout = (props) => {\r\n  let history = useHistory();\r\n  const location=useLocation()\r\n  const [{ }, dispatch] = useStateValue();\r\n   \r\n\r\n  let back = e => {\r\n    e.stopPropagation();\r\n    history.goBack();\r\n  };\r\n\r\n    const handleLogout = () => {\r\n        console.log('Logout');\r\n        localStorage.removeItem('token');\r\n       \r\n        dispatch({type:'AUTH',auth:false});\r\n        dispatch({type:'SET_USER',user:null});\r\n        history.push()\r\n        // window.location.href = '/login';\r\n       \r\n       \r\n    };\r\n  \r\n    return (\r\n      <div\r\n      onClick={back}\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        zIndex:99999999,\r\n        background: \"rgba(0, 0, 0, 0.7)\",\r\n        display:'flex'\r\n        \r\n      }}\r\n    >\r\n                <div\r\n                className='logout'\r\n                  style={{\r\n                   position:'absolute',\r\n                    width:'30%',\r\n                    height:'34%',\r\n                    background: \"#16191d\",\r\n                    left:'35%',\r\n                    top:'33%',\r\n                    padding: 15,\r\n                     \r\n                    border: \"3px solid #666666\"\r\n                  }}\r\n                >\r\n                  <div>\r\n                  <img src={logouticon} className=\"logout-icon\"/>\r\n                  </div>\r\n                  <h4>LogOut</h4>\r\n                  <p >Are you sure to exit?</p>\r\n                <div className='logout-btn-container'>\r\n                <button className=\"logout-btn logout-btn-red\" type=\"button\" onClick={back}>\r\n                    Close\r\n                  </button>\r\n                  <button className=\"logout-btn logout-btn-green\" type=\"button\" onClick={handleLogout}>\r\n                    Yes\r\n                  </button>\r\n                \r\n                  </div>\r\n                </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Logout) \r\n","/home/mhdi/Desktop/unip/client/src/components/admin/users/UsersPanel.js",["185","186","187","188","189","190","191","192","193"],"import React, { useEffect, useState } from 'react'\nimport './UsersPanel.css'\nimport {useFetch }from './../../../hooks/useFetch'\nimport MaterialTable , { MTableToolbar }from 'material-table';\nimport Modal from '@material-ui/core/Modal';\nimport refresh from '@material-ui/icons/Refresh';\nimport moment from 'moment';\nimport Edit from '@material-ui/icons/Edit';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\n// import Delete from '@material-ui/icons/Delete';\n// import Icon from '@material-ui/core/Icon';\nimport {useHistory} from 'react-router-dom'\nimport Delete from './delete.svg'\nimport {icons }from './../../util/icon/icons'\nimport { AddUser } from './adduser/AddUser';\nimport { DeleteUser } from './deleteuser/DeleteUser';\nimport { ResetPassword } from './resetpassword/ResetPassword';\nimport config from './../../../config/config';\nimport { useCurrentUser } from '../../../hooks/useCurrentUser';\nexport const UsersPanel = () => {\n  const tableRef = React.createRef();\n   const res= useFetch('/users')\n  \n   const history=useHistory()\n  //  const [status, setstatus] = useState()\n   const [dopen, setdopen] = useState(false)\n   const [ddata, setddata] = useState('')\n   const [ropen, setropen] = useState(false)\n   const [rdata, setrdata] = useState('')\n   const [open, setOpen] = useState(false);\n   const [modalbody, setmodalbody] = useState('')\n   const [editdata, seteditdata] = useState({_id:\"\",email:\"\",firstName:\"\",lastName:\"\",phoneNumber:\"\",isAdmin:false})\n   const [editmode, seteditmode] = useState(false)\n   const user = useCurrentUser()\n \n// useEffect(() => {\n//   const cc =async()=>{\n//     const res = await fetch(\n//       config.baseUrl+'/users/currentuser',{\n//           method: 'GET',\n   \n//               headers:{\n//                 // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n//                 'Access-Control-Allow-Origin': \"*\",\n//                 'Access-Control-Allow-Headers': \"*\",\n//                 'Content-Type': 'application/json',\n//                 'x-auth-token': localStorage.getItem('token')\n//               }   \n//              }\n//     )    \n//  var user=await res.json()\n\n\n//   setuser(user.user)   \n//   }\n//     cc()\n// }, [])\n\n\n   const handleOpen = () => {\n     seteditmode(false)\n     setOpen(true);\n    //  seteditdata({editdata,hidepassword:false})\n    \n   };\n\n   const handleClose = () => {\n    setdopen(false)\n    setropen(false)\n     setOpen(false);\n     seteditdata({_id:\"\",email:\"\",firstName:\"\",lastName:\"\",phoneNumber:\"\",isAdmin:false})\n     window.location.reload()\n    };\n\n    const checkAccess=(id)=>{\n    \n        \n\n     var child=[]\n\n   \n   \n       user?.creatures?.map(c=>{\n        child.push(String(c._id))\n      })\n     \n      \n      // console.log(user._id==id );\n      // console.log(be.search('isSuperAdmin')!=-1 );\n      // console.log(child.includes(id));\n     \n      if (user?._id==id || user?.isSuperAdmin|| child.includes(id) ){\n          \n            return false\n      }else{\n          \n            return true\n      }  \n\n    }\n\n\n    return (\n        <div className=\"user-panel\">\n        <div className=\"table-container\" >\n           <MaterialTable\n  \n           icons={icons}\n              columns={[\n                { title: 'id', field: '_id' \n            ,render: row => <span>{ row[\"_id\"].substring( -1)  }</span>\n            },\n            { title: 'FirstName', field: 'firstName' ,cellStyle: {\n                  \n                color: 'green'\n              }},\n            { title: 'LastName', field: 'lastName' ,cellStyle: {\n                  \n                color: 'green'\n              }},\n                { title: 'Email', field: 'email'  , cellStyle: {\n                  \n                    color: 'blue'\n                  }, },\n       \n                { title: 'Phone', field: 'phoneNumber' },\n                { title: 'isAdmin', field: 'isAdmin' ,lookup:{ true: <span style={{color:'green'}}>&#10003;</span>, false: \"_\" }},\n                { title: 'isInside', field: 'isInside' ,lookup:{ true: <span style={{color:'red'}}>&#10003;</span>, false: \"_\" }},\n                { title: 'creator', field: 'creator' ,cellStyle: {\n                  \n                  color: 'orange'\n                }},\n                { title: 'createdAt', field: 'createdAt' ,\n            \n                render: row => <span>{ moment(row[\"createdAt\"]).format('lll')   }</span>\n            },\n                { title: 'updatedAt', field: 'updatedAt',  render: row => <span>{ moment(row[\"updatedAt\"]).fromNow()   }</span> }\n              ]}\n\n           data={res.response}\n           title={'Users'}\n           actions={[\n            rowData => ( {\n              icon: () => <Edit color={ 'primary'} />,\n              tooltip: 'Edit User',\n              onClick: (event, rowData) => {\n              //  history.push({\n              //   pathname: '/users/edit',\n                \n              //   state: {data:rowData}\n              // })\n\n              \n              seteditdata(rowData)\n              seteditmode(true)\n              setOpen(true)\n              // seteditdata({editdata,hidepassword:true})\n\n              },\n              disabled: checkAccess(rowData['_id'])\n              // disabled: rowData.isAdmin==true\n        \n            }),\n            rowData => ({\n              icon: () =><img style={{width:'1.25rem'}} src={Delete} /> ,\n              tooltip: 'Delete User',\n              onClick: (event, rowData) => {\n                setdopen(true)\n                setddata(rowData)\n              \n              }\n              ,\n              disabled: checkAccess(rowData['_id'])\n              // },\n              // disabled: rowData.isAdmin==true\n            }),\n            rowData => ( {\n              icon: () => < VpnKeyIcon/>,\n              tooltip: 'change password',\n              onClick: (event, rowData) => {\n              //  history.push({\n              //   pathname: '/users/changepassword',\n              // var re=checkAccess(rowData['_id']).then((res)=>{return res})\n              // console.log(re);\n           \n              //   state: {data:rowData}\n              // })\n              // console.log(cc(rowData['_id']));\n              setrdata(rowData)\n              setropen(true)\n              },\n              disabled: checkAccess(rowData['_id'])\n        \n            }),\n\n            {\n              icon: refresh,\n              tooltip: 'Refresh Data',\n              isFreeAction: true,\n              onClick: () => window.location.reload()\n            }\n           \n          ]}\n\n          components={{\n            Toolbar: props => (\n              <div>\n                <MTableToolbar {...props} />\n                <div className=\"adduserbtn-container\">\n                  <button className=\"adduser-btn\" onClick={()=>{handleOpen()}}>+ add user</button>\n           \n                </div>\n              </div>\n            )\n          }\n        }\n\n        options={{\n          exportButton: true\n        }}\n\n\n           />\n           </div>\n\n\n           <Modal\n            open={open}\n            onClose={handleClose}\n            style={{backgroundColor: 'rgba(0,0,0,0.9)'}}\n            \n            // aria-labelledby=\"simple-modal-title\"\n            // aria-describedby=\"simple-modal-description\"\n           >\n            <AddUser handleClose={handleClose} edata={editdata} editmode={editmode}/>\n           </Modal>\n\n\n   \n            <Modal \n               open={dopen}\n               onClose={handleClose}\n               style={{backgroundColor: 'rgba(0,0,0,0.9)'}}\n            \n            >\n              <DeleteUser ddata={ddata} close={handleClose}/>\n            </Modal>\n\n\n             \n            <Modal \n               open={ropen}\n               onClose={handleClose}\n               style={{backgroundColor: 'rgba(0,0,0,0.9)'}}\n            \n            >\n              <ResetPassword rdata={rdata} close={handleClose}/>\n            </Modal>\n\n\n\n\n\n        </div>\n    )\n}\n\n// createdAt: \"2020-11-27T13:17:10.117Z\"\n// email: \"m@google.com\"\n// id: \"5fc0fc567fa94525beb23b27\"\n// updatedAt: \"2020-11-27T13:17:10.117Z\"\n// __v: 0\n// _id: \"5fc0fc567fa94525beb23b27\"\n","/home/mhdi/Desktop/unip/client/src/hooks/useFetch.js",["194"],"import React from 'react'\n\n\n// import axios from 'axios';\nimport config from '../config/config';\n\nexport const useFetch = (url, options={}) => {\n    // url, options\n  \n\n        const [response, setResponse] = React.useState([]);\n      \n        const [error, setError] = React.useState(null);\n        const [isLoading, setIsLoading] = React.useState(false);\n        React.useEffect(() => {\n          const fetchData = async () => {\n            setIsLoading(true);\n            try {\n              const res = await fetch(\n                config.baseUrl+url,{\n                    method:'GET',\n                        headers:{\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }   \n                       }\n              )    \n              const data=await res.json()  \n              console.log('----useFetch----')\n              console.log(data)\n              console.log('----------------')\n           \n              if (data.length || data?.user){\n                setResponse(data);\n               \n                setIsLoading(false)\n            \n              }else{\n                setIsLoading(false)\n                setError(data);\n              }\n      \n\n            } catch (err) {\n              setError(err);\n            }\n          };\n          fetchData();\n        }, []);\n        return { response, error, isLoading };\n         \n \n}\n      // await axios.get(config.baseUrl+url,{\n            //     headers:{\n            //         'Content-Type': 'application/json',\n            //         'x-auth-token': localStorage.getItem('token')\n            //     }   \n            //    });","/home/mhdi/Desktop/unip/client/src/components/util/icon/icons.js",[],"/home/mhdi/Desktop/unip/client/src/components/admin/gates/deletegate/DeleteGate.js",["195"],"import React, { useState } from 'react'\n\nimport deleteIcon from './../../users/deleteuser/delete.svg';\nimport config from './../../../../config/config'\nimport { Button } from '@material-ui/core';\nexport const DeleteGate = ({ddata,close}) => {\n    const [msg, setmsg] = useState()\n   const handleDelete=async()=>{\n       \n    try {\n        const res = await fetch(\n          config.baseUrl+'/gates',{\n              method: 'delete',\n            //   mode : 'cors',\n              body: JSON.stringify(\n\n                {      \n                    id: ddata._id,\n           \n                        \n                    }\n\n              ),\n                  headers:{\n                    // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n                    'Access-Control-Allow-Origin': \"*\",\n                    'Access-Control-Allow-Headers': \"*\",\n                      'Content-Type': 'application/json',\n                      'x-auth-token': localStorage.getItem('token')\n                  }   \n                 }\n        )    \n        const data=await res.json()  \n        console.log('----Delete----')\n        console.log(data)\n        console.log('----------------')\n     \n        if (data.msg ){\n            setmsg(data.msg) \n          \n        }else{\n            \n            setmsg(data.msg) \n\n        }\n\n\n      } catch (err) {\n        setmsg(err) \n      }\n  \n   }\n    return (\n        <div className=\"deleteuser-container\">\n            <div className=\"deleteIcon-container\">\n               <img src={deleteIcon} className=\"deleteIcon\" />\n            </div>\n            <p >Delete User</p>\n    <p>Are you sure to delete <span style={{color:'red'}}>{ddata.name}</span>?</p>\n    <p style={{color:'green'}}>{msg}</p>\n    <div className=\"deleteuser-button-container\">\n                    <Button style={{padding: '10px 30px'}}variant=\"contained\" color=\"secondary\" onClick={close}>\n                    Cansel\n                    </Button>\n                    <Button  variant=\"contained\" style={{background:'var(--color-green)',color:'white', marginLeft:'2rem'  , padding: '10px 30px',\n                        fontSize: '0.875rem',\n                        minWidth: '64px'}} \n                        onClick={handleDelete}\n                        >\n                      Delete\n                    </Button>\n            </div>\n    \n        </div>\n    )\n}\n","/home/mhdi/Desktop/unip/client/src/components/admin/users/adduser/AddUser.js",["196","197","198","199","200","201","202"],"/home/mhdi/Desktop/unip/client/src/reportWebVitals.js",[],["203","204"],"/home/mhdi/Desktop/unip/client/src/context/reducer.js",[],"/home/mhdi/Desktop/unip/client/src/components/login/Login.js",["205","206","207"],"\nimport React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { useStateValue } from \"../../context/StateProvider\";\nimport config from './../../config/config.js'\nimport './Login.css';\nimport Email from './email.png'\nimport invisible from './invisible.svg'\nimport view from './view.svg'\n\n// import user from './user.png'\n// import call from './call.png'\nexport const Login = () => {\n  const [active, setactive] = useState(true)\n  const [ErrorMsg, setErrorMsg] = useState(null)\n  const history = useHistory();\n  const [{}, dispatch] = useStateValue();\n    const [email, setemail] = useState(\"\");\n    const [password, setpassword] = useState(\"\")\n    \n    const handleSubmit=async (e)=>{\n        e.preventDefault();\n        // console.log(email,password);\n        setemail(\"\");\n        setpassword(\"\");\n        try {\n            const res = await fetch(config.baseUrl+'/login', { \n              method: 'POST', \n             \n              body: JSON.stringify({ email, password }),\n              headers: {'Content-Type': 'application/json'}\n            });\n            const data = await res.json();\n   \n            if(data.token){\n              localStorage.setItem('token',data.token)\n              dispatch({\n                type: \"SET_USER\",\n                user: data.user,\n              });\n              dispatch({\n                type: \"AUTH\",\n                auth: true,\n              });\n              history.push('/dashboard')\n            }else{\n               setErrorMsg(data.msg)\n              console.log(\"[error]:\",data);\n            }\n          }\n          catch (err) {\n            setErrorMsg(err)\n            console.log(err);\n          }\n    \n    }\n    return (\n        <div className=\"Login\">\n            <form action=\"/action_page.php\" className=\"Login-form\" onSubmit={(e)=>{handleSubmit(e)}}>\n                <p style={{fontSize:\"23px\"}}>Welcome back!</p>\n             \n\n                <div className=\"input-container\">\n                <div className=\"icon\">\n                  <img src={Email} />\n                  </div>\n                \n                  <input  className=\"input-field\" type=\"email\" placeholder=\"email\" required \n                    value={email}\n                    onChange={(e)=>{setemail(e.target.value)}}\n                  />\n               \n                </div>\n\n                <div className=\"input-container\" >\n                <div className=\"icon\" onClick={()=>{setactive(pre=>!pre)}} style={{cursor:\"pointer\"}}>\n                  <img src={active ? invisible:view} />\n                  </div>\n                  <input className=\"input-field\" type={active?\"password\":\"text\"} \n                  placeholder=\"password\" name=\"usrnm\" required minLength=\"8\"\n                  value={password}\n                  onChange={(e)=>{setpassword(e.target.value)}}\n                  />\n                \n                </div>\n                <p className=\"login-error\">{ErrorMsg}</p>\n\n                <button type=\"submit\" className=\"btn\" col=\"80\">Login</button>\n          </form>\n        </div>\n    )\n}\n","/home/mhdi/Desktop/unip/client/src/components/dashboard/Dashboard.js",[],"/home/mhdi/Desktop/unip/client/src/hooks/useTime.js",[],"/home/mhdi/Desktop/unip/client/src/hooks/useSocket.js",["208"],"import React from 'react';\r\nimport socket from 'socket.io-client';\r\n\r\n// Use socket to fetch request to data \r\n// Socket server's url and topic in which data is sent\r\nconst useSocket = (serverUrl,options ,topic) => {\r\n    const [temp, setTemp] = React.useState(0);\r\n    const [sc,setsc]=React.useState()\r\n    const [isConnected, setConnected] = React.useState(false);\r\n      const send=(msg)=>{\r\n       sc.emit(topic,msg)\r\n      }\r\n    React.useEffect(() => {\r\n        const client = socket.connect(serverUrl,options);\r\n        setsc(client)\r\n        client.on(\"connect\", () => setConnected(true));\r\n        client.on(\"disconnect\", () => setConnected(false));\r\n        client.on(topic, (data) => {\r\n            setTemp(data);\r\n        })\r\n        // return ()=>{\r\n        //             client.emit('disconnect')\r\n        //             client.off()\r\n        //         }\r\n    }, [serverUrl, topic, isConnected]);\r\n\r\n    return { temp, isConnected ,send};\r\n}\r\n\r\nexport default useSocket\r\n\r\n","/home/mhdi/Desktop/unip/client/src/components/admin/gates/addgate/AddGate.js",["209","210","211","212"],"\nimport React, { useState } from 'react'\nimport './AddGate.css'\n\nimport { Button} from '@material-ui/core'\nimport config from './../../../../config/config';\nimport nIcon from './security-gate.svg'\n\nexport const AddGate= ({edata,handleClose,editmode}) => {\n   const [name, setname] = useState(edata.name)\n   const [cname, setcname] = useState(edata.name)\n   const [id, setid] = useState(edata._id)\n   const [errorMsg, seterrorMsg] = useState({name:\"\",apiKey:\"\",topic:\"\"})\n   const [response, setresponse] = useState('')\n   \n   const handleSubmit=async (e)=>{\n    e.preventDefault();\n    if(cname==name){\n        seterrorMsg({name:'Unchanged'}) \n        return \n    }\n\n    try {\n        const res = await fetch(\n          config.baseUrl+'/gates',{\n              method: editmode?'PATCH':'Post',\n\n              body: JSON.stringify(\n\n                {       id,\n                        name\n     \n                        \n                    }\n\n              ),\n                  headers:{\n                    // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n                    'Access-Control-Allow-Origin': \"*\",\n                    'Access-Control-Allow-Headers': \"*\",\n                      'Content-Type': 'application/json',\n                      'x-auth-token': localStorage.getItem('token')\n                  }   \n                 }\n        )    \n        const data=await res.json()  \n        console.log('----Post----')\n        console.log(data)\n        console.log('----------------')\n     \n        if (data.gate || data.cdata){\n          setresponse(data)\n          seterrorMsg({name:\"\",apiKey:\"\"})\n        }else{\n            setresponse(\"\")\n            seterrorMsg(data.errors) \n\n        }\n\n\n      } catch (err) {\n        seterrorMsg(err) \n      }\n  \n\n\n\n\n\n\n\n\n\n\n\n}\n\n    return (\n        <div className=\"addgate-container\">\n        <form className=\"adduser-form\" onSubmit={(e)=>{handleSubmit(e)}}>\n       <p style={{fontSize:\"20px\"}}>{editmode?'Edit gate':'Add gate'}</p>\n      <div className=\"id-container\">\n                <div className=\"input-container\">\n                                <div className=\"icon\">\n                                <img src={nIcon} />\n                                </div>\n                                \n                                <input  className=\"input-field\" type=\"text\" minLength=\"2\" placeholder=\"name\" required \n                                    value={name}\n                                    onChange={(e)=>{setname(e.target.value)}}\n                                />\n                            \n                    </div>\n                    \n                     \n\n\n\n\n\n      </div>\n      \n       \n           { errorMsg.name &&<p className=\"adduser-error\">{errorMsg.name}</p>}\n           { errorMsg.topic &&<p className=\"adduser-error\">{errorMsg.topic}</p>}\n             {(response && !editmode) ? <p style={{color:'green'}}>successful!</p>:''}\n    {response?.cdata?.length?(<><span style={{color:'orange'}}>{ response.cdata}</span><p style={{color:'green',marginTop:'.5rem'}}> successfully changed !</p></>):''}\n            <div className=\"addgate-button-container\">\n                    <Button style={{padding: '10px 40px'}} variant=\"contained\" color=\"secondary\" onClick={handleClose}>\n                    Cansel\n                    </Button>\n                    <Button type=\"submit\" variant=\"contained\" style={{background:'var(--color-green)',color:'white',   marginLeft:'2rem'  , padding: '10px 50px',\n                        fontSize: '0.875rem',\n                        minWidth: '64px'}} >\n                    Save\n                    </Button>\n\n            </div>\n            </form>\n      </div>\n    )\n}\n","/home/mhdi/Desktop/unip/client/src/components/searchbar/SearchBar.js",["213"],"import React from 'react'\nimport './SearchBar.css'\nimport searchicon from './search.svg'\nexport const SearchBar = ({filter}) => {\n    return (\n        <div className=\"searchbar\">\n            <div className=\"search-icon-container\">\n              <img src={searchicon} />\n             \n            </div>\n            <input type=\"text\" onChange={filter} className=\"search-input\" placeholder=\"search...\" id=\"\"/>\n        </div>\n    )\n}\n","/home/mhdi/Desktop/unip/client/src/index.js",[],"/home/mhdi/Desktop/unip/client/src/hooks/useCurrentUser.js",[],"/home/mhdi/Desktop/unip/client/src/components/sidebar/navbar/NavBar.js",["214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React, { useEffect, useState } from 'react'\nimport './NavBar.css'\nimport dashboardiconb from './dashboardb.svg'\n\nimport usericonb from './userb.svg'\nimport adminiconb from './managementb.svg'\nimport dashboardicon from './dashboard.svg'\nimport logouticon from './logout.svg'\nimport logouticonb from './logoutb.svg'\n// import usericon from './user.svg'\nimport adminicon from './management.svg'\nimport { useLocation } from \"react-router\";\nimport {Link} from 'react-router-dom'\nimport AssessmentIcon from '@material-ui/icons/Assessment';\n// import TimelineIcon from '@material-ui/icons/Timeline';\nexport const NavBar = () => {\n     const location =useLocation()\n     const [Active, setActive] = useState(null)\n    useEffect(async() => {\n       var temp;\n       if(location.pathname=='/dashboard'){\n           temp=1;\n       }else if(location.pathname=='/insights'){\n           temp=2;\n       }else if(location.pathname=='/admin'){\n           temp=3;\n       }else if(location.pathname=='/logout'){\n        temp=10;\n    }\n       setActive(temp)\n\n    }, [location])\n\n\n    return (\n        <div className=\"navbar\">\n            <div className=\"navbaritem-container\">\n              <Link to=\"/dashboard\">\n                 <img className=\"navitem-img\" src={Active==1?dashboardiconb:dashboardicon}/>\n              </Link>\n            </div>\n            <div className=\"navbaritem-container\">\n            <Link to=\"/insights\">\n                {/* <img className=\"navitem-img\" src={Active==2?usericonb:usericon}  /> */}\n                <AssessmentIcon style={{color:Active==2?'var(--color-green)':'#666666'}} fontSize=\"large\"/>\n            </Link>  \n\n            </div>\n            <div className=\"navbaritem-container\">\n             <Link to=\"/admin\">\n                <img className=\"navitem-img\" src={Active==3?adminiconb:adminicon}  />\n             </Link> \n\n            </div>\n            <div className=\"navbaritem-container\">\n             <Link to={{\n                    pathname: '/logout',\n           \n                       state: { background: location }\n                    }}>\n                <img className=\"navitem-img\" src={Active==10?logouticonb:logouticon}  />\n             </Link> \n\n            </div>\n\n        </div>\n    )\n}\n","/home/mhdi/Desktop/unip/client/src/components/AppRouter/AppRouter.js",[],"/home/mhdi/Desktop/unip/client/src/components/insight/Insight.js",["227","228","229","230","231"],"import React, { useEffect, useState } from 'react'\n// import Chart from \"react-apexcharts\";\nimport ApexCharts from 'apexcharts';\nimport moment from 'moment'\nimport './Insight.css'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core';\nimport { useFetch } from '../../hooks/useFetch';\nimport config from '../../config/config'\n\n\nconst useStyles = makeStyles(theme => ({\n    inputRoot: {\n      color: \"purple\",\n      \"& .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"var(--color-green)\"\n      },\n      \"&:hover .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"var(--color-green)\"\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"var(--color-green)\"\n      }\n    }\n  }));\n\n\nexport const Insight = () => {\n\n    const classes = useStyles();\n    const [currentUser, setcurrentUser] = useState()\n    const [total, settotal] = useState('0')\n    const [data, setdata] = useState(\n        [\n            {\n              x: 'Analysis',\n              y: [\n                new Date('2019-02-27').getTime(),\n                new Date('2019-03-04').getTime()\n              ],\n              fillColor: '#008FFB'\n            },\n            {\n              x: 'Design',\n              y: [\n                new Date('2019-03-04').getTime(),\n                new Date('2019-03-08').getTime()\n              ],\n              fillColor: '#00E396'\n            },\n            {\n              x: 'Coding',\n              y: [\n                new Date('2019-03-07').getTime(),\n                new Date('2019-03-10').getTime()\n              ],\n              fillColor: '#775DD0'\n            },\n            {\n              x: 'Testing',\n              y: [\n                new Date('2019-03-08').getTime(),\n                new Date('2019-03-12').getTime()\n              ],\n              fillColor: '#FEB019'\n            },\n            {\n              x: 'Deployment',\n              y: [\n                new Date('2019-03-12').getTime(),\n                new Date('2019-03-17').getTime()\n              ],\n              fillColor: '#FF4560'\n            }\n\n          ]\n    )\n    const {response,error}=useFetch('/users')\n    const handleSelect=(e,v,r)=>{\n     if(r=='select-option'){\n\n      setcurrentUser(v)\n\n     }\n    }\n\n\nuseEffect(() => {\n    const fetchData=async()=>{\n\n       \n        try {\n          const res = await fetch(\n            config.baseUrl+'/gates/data/'+currentUser._id,{\n                method:'GET',\n                    headers:{\n                        'Content-Type': 'application/json',\n                        'x-auth-token': localStorage.getItem('token')\n                    }   \n                   }\n          )    \n          const datar=await res.json()  \n          console.log('----range----')\n          console.log(datar)\n          console.log('----------------')\n       \n        \n           \n            \n            settotal(datar.total)\n           \n            //==========format data=============\n            //  {\n            //   x: 'Deployment',\n            //   y: [\n            //     new Date('2019-03-12').getTime(),\n            //     new Date('2019-03-17').getTime()\n            //   ],\n            //   fillColor: '#FF4560'\n            // }\n            // var fdata= await datar.range.map(range=>{\n\n            //     return {\n            //        x:currentUser._id,\n            //        y:[new Date(range[0]).getTime(),new Date(range[1]).getTime()]\n            //        ,fillColor: 'var(--color-green)'\n            //     }\n            // })\n          \n            // setdata(\n            //     datar.range.map(range=>{\n\n            //         return {\n            //            x:currentUser._id,\n            //            y:[new Date(range[0]).getTime(),new Date(range[1]).getTime()]\n            //            ,fillColor: 'var(--color-green)'\n            //         }\n            //     })\n            // )\n            setoptions({\n\n                ...options,\n                series: [\n                    {\n                      data:datar.fdata\n                    }]\n            })\n           \n            //==================================\n          \n\n        } catch (err) {\n            \n          console.log(err)\n        }\n\n      }\n\n\n      fetchData()\n}, [,currentUser])\n\n\n\n//     const useStyles = makeStyles({\n//         root: \n//         `\n//     background: linear-gradient(45deg, #fe6b8b 30%, #ff8e53 90%);\n//     border-radius: 3px;\n//     font-size: 16px;\n//     border: 0;\n//     color: white;\n//     height: 48px;\n//     padding: 0 30px;\n//     box-shadow: 0 3px 5px 2px rgba(255, 105, 135, 0.3);\n//   `, // a style rule\n       \n//       });\n//       const classes = useStyles();\n      \n\n\n\n\n\n    const Aoptions = response.map((option) => {\n        const firstLetter = option.lastName[0].toUpperCase();\n        return {\n          firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n          ...option,\n        };\n      });\n    \n\n\n\n\n\n    const [options, setoptions] = useState(\n        {\n            series: [\n            {\n              data:data\n            }\n          ],\n            chart: {\n                id:'chart1',\n              \n                height: 450,\n                type: 'rangeBar',\n\n          \n                toolbar: {\n                  show: true,\n                  offsetX: 0,\n                  offsetY: 0,\n                  tools: {\n                    download: true,\n                    selection: true,\n                    zoom: true,\n                    zoomin: true,\n                    zoomout: true,\n                    pan: false,\n                    reset: true | '<img src=\"/static/icons/reset.png\" width=\"20\">',\n                    customIcons: []\n                  },\n                  export: {\n                    csv: {\n                      filename: undefined,\n                      columnDelimiter: ',',\n                      headerCategory: 'category',\n                      headerValue: 'value',\n                      dateFormatter(timestamp) {\n                        return new Date(timestamp).toDateString()\n                      }\n                    }\n                  },\n                  autoSelected: 'zoom' \n                },\n           \n            \n            \n\n\n\n\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n              distributed: true,\n              dataLabels: {\n                hideOverflowingLabels: false\n              }\n            }\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function(val, opts) {\n            //   var label = opts.w.globals.labels[opts.dataPointIndex]\n              var a = moment(val[0])\n              var b = moment(val[1])\n              var diff = b.diff(a, 'minutes')\n              return  diff+' min' //+ (diff > 1 ? ' minutes' : ' munute')\n            },\n            style: {\n              colors: ['#f3f4f5', '#fff']\n            }\n          },\n          xaxis: {\n            type: 'datetime',\n            labels: {\n                show: true,\n                style: {\n                    colors: ['white'],\n                    fontSize: '12px',\n                    fontFamily: 'Helvetica, Arial, sans-serif',\n                    fontWeight: 400,\n                    cssClass: 'apexcharts-xaxis-label',\n                } ,datetimeFormatter: {\n                    year: 'yyyy',\n                    month: \"MMM 'yy\",\n                    day: 'dd MMM',\n                    hour: 'HH:mm ',\n                },\n            },\n \n          },\n          yaxis: {\n            show: false\n          },\n \n          grid: {\n            row: {\n              colors: ['var(--color-gray-dark)', 'var(--color-gray)'],//'#f3f4f5', '#fff'\n              opacity: 1\n            }\n          },tooltip: {\n          \n            custom: function({series, seriesIndex, dataPointIndex, w}) {\n               \n               var d=options.series\n               console.log(d);\n              return '<div class=\"arrow_box\">' +\n                '<span>'+moment(series[seriesIndex][dataPointIndex]).subtract(3.5, 'hours').format('lll')+'</span>' +\n                '</div>'\n            }\n          }\n          }\n    )\n\n    \n\n\n\n\n\n// ============================================================\n// var options2 = {\n//     chart: {\n//       id: \"chart1\",\n//       height: 130,\n//       type: \"rangeBar\",\n//       foreColor: \"#ccc\",\n//       brush: {\n//         target: \"chart2\",\n//         enabled: true\n//       },\n//       selection: {\n//         enabled: true,\n//         fill: {\n//           color: \"#fff\",\n//           opacity: 0.4\n//         },\n//         xaxis: {\n//         //   min: new Date(\"27 Jul 2017 10:00:00\").getTime(),\n//         //   max: new Date(\"14 Aug 2017 10:00:00\").getTime()\n//         },    yaxis: {\n//             show:false\n//             //   min: new Date(\"27 Jul 2017 10:00:00\").getTime(),\n//             //   max: new Date(\"14 Aug 2017 10:00:00\").getTime()\n//             }\n//       }\n//     },\n//     colors: [\"#FF0080\"],\n//     series: [\n//       {\n//         data: series.series.data\n//       }\n//     ],\n//     stroke: {\n//       width: 2\n//     },\n//     grid: {\n//       borderColor: \"#444\"\n//     },\n//     markers: {\n//       size: 0\n//     },\n//     xaxis: {\n//       type: \"datetime\",\n//       tooltip: {\n//         enabled: false\n//       }\n//     },\n//     yaxis: {\n//       tickAmount: 2\n//     }\n//   };\n  \n//   var chart2 = new ApexCharts(document.querySelector(\"#chart-bar\"), options2);\n// ============================================================\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n        document.querySelector(\"#chart\").innerHTML=\"\"\n        var chart1 = new ApexCharts(document.querySelector(\"#chart\"), options);\n        chart1.render();\n        // var chart2 = new ApexCharts(document.querySelector(\"#chart-bar\"), options2);\n        // chart2.render();\n        console.log(options);\n    }, [options])\n    return (\n        <div className=\"insight\">\n            <div  className=\"chart-container\">\n                <div className=\"user-selection-bar\">\n                <Autocomplete\n                    id=\"grouped-demo\"\n                    className=\"grouped-demo\"\n                    classes={classes}\n                    options={Aoptions.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n                    groupBy={(option) => option.firstLetter}\n                    getOptionLabel={(option) => option.lastName+' '+option.firstName}\n                    onChange={(e,v,r)=>handleSelect(e,v,r)}\n                    renderInput={(params) => <TextField {...params} label=\"Select User\" variant=\"outlined\" />}\n                    />\n                    <p>total : {moment.duration(total, \"milliseconds\").humanize()}</p>\n                </div>\n               <div id=\"chart\"></div>\n               <div id=\"chart-bar\"></div>\n            </div>\n        </div>\n    )\n}\n","/home/mhdi/Desktop/unip/client/src/context/StateProvider.js",[],"/home/mhdi/Desktop/unip/client/src/components/admin/gates/GatesPanel.js",["232","233","234","235","236","237","238","239"],"import React, {  useState } from 'react'\nimport './GatesPanel.css'\nimport {useFetch }from './../../../hooks/useFetch'\nimport MaterialTable , { MTableToolbar }from 'material-table';\n\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Modal from '@material-ui/core/Modal';\nimport refresh from '@material-ui/icons/Refresh';\nimport moment from 'moment';\nimport Edit from '@material-ui/icons/Edit';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport config from './../../../config/config';\nimport copyIcon from './copy.svg'\n// import Delete from '@material-ui/icons/Delete';\n// import Icon from '@material-ui/core/Icon';\nimport {useHistory} from 'react-router-dom'\nimport Delete from './../users/delete.svg'\nimport {icons }from './../../util/icon/icons'\nimport { AddGate } from './addgate/AddGate';\nimport { DeleteGate} from './deletegate/DeleteGate';\nimport { useCurrentUser } from '../../../hooks/useCurrentUser';\n// import { ResetPassword } from './resetpassword/ResetPassword';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport const GatesPanel = () => {\n  \n   const res= useFetch('/gates')\n   const history=useHistory()\n   const [dopen, setdopen] = useState(false)\n   const [ddata, setddata] = useState('')\n   const [sopen, setsopen] = useState(false)\n   const user = useCurrentUser()\n   const [cdata, setcdata] = useState('')\n   const [open, setOpen] = useState(false);\n   const [modalbody, setmodalbody] = useState('')\n   const [editdata, seteditdata] = useState({_id:\"\",name:\"\",apiKey:\"\"})\n   const [editmode, seteditmode] = useState(false)\n  //  const [apipath, setapipath] = useState()\n  // useEffect(() => {\n  //   const cc =async()=>{\n  //     const res = await fetch(\n  //       config.baseUrl+'/users/currentuser',{\n  //           method: 'GET',\n     \n  //               headers:{\n  //                 // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n  //                 'Access-Control-Allow-Origin': \"*\",\n  //                 'Access-Control-Allow-Headers': \"*\",\n  //                 'Content-Type': 'application/json',\n  //                 'x-auth-token': localStorage.getItem('token')\n  //               }   \n  //              }\n  //     )    \n  //  var user=await res.json()\n  \n  \n  //   setuser(user.user)   \n  //   }\n  //     cc()\n  // }, [])\n  const checkAccess=(id)=>{\n    \n        \n\n    var child=[]\n\n   \n  \n      user?.creatures?.map(c=>{\n       child.push(String(c._id))\n     })\n    \n  \n     // console.log(be.search('isSuperAdmin')!=-1 );\n     // console.log(child.includes(id));\n    \n     if (user?._id==id || user?.isSuperAdmin|| child.includes(id) ){\n         \n           return false\n     }else{\n         \n           return true\n     }  \n\n   }\n\n\n\n\n\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setsopen(false);\n  };\n   const handleOpen = () => {\n     seteditmode(false)\n     setOpen(true);\n  \n    \n   };\n\n   const handleClose = () => {\n    setdopen(false)\n   \n     setOpen(false);\n     seteditdata({_id:\"\",name:\"\",apiKey:\"\"})\n     window.location.reload()\n    };\n\n\n\n    return (\n        <div className=\"user-panel\">\n        <div className=\"table-container\" >\n           <MaterialTable\n  \n           icons={icons}\n              columns={[\n                { title: 'id', field: '_id' },\n                { title: 'name', field: 'name' ,cellStyle: {color: 'green'}},\n                { title: 'apiKey', field: 'apiKey'  , cellStyle: {color: 'blue'}, },\n                { title: 'topic', field: 'topic' ,cellStyle: {color: 'red'}},\n                { title: 'creator', field: 'creator' ,cellStyle: {\n                  \n                  color: 'orange'\n                }},\n                { title: 'createdAt', field: 'createdAt' ,\n            \n                render: row => <span>{ moment(row[\"createdAt\"]).format('lll')   }</span>\n                },\n                { title: 'updatedAt', field: 'updatedAt',  render: row => <span>{ moment(row[\"updatedAt\"]).fromNow()   }</span> }\n              ]}\n\n           data={res.response}\n           title={'Gates'}\n           actions={[\n            rowData => ( {\n              icon: () => <Edit color={ 'primary'} />,\n              tooltip: 'Edit Gate',\n              onClick: (event, rowData) => {\n\n              seteditdata(rowData)\n              seteditmode(true)\n              setOpen(true)\n\n\n              },\n              disabled: checkAccess(rowData['creator'])\n            \n        \n            }),\n            rowData => ({\n              icon: () =><img style={{width:'1.25rem'}} src={Delete} /> ,\n              tooltip: 'Delete Gate',\n              onClick: (event, rowData) => {\n                setdopen(true)\n                setddata(rowData)\n              \n              \n              },\n              disabled: checkAccess(rowData['creator'])\n            }),\n            rowData => ( {\n              icon: () => <AutorenewIcon/>,\n              tooltip: 'change apikey',\n              onClick: async(event, rowData) => {\n              //----------------------------\n              try {\n                const res = await fetch(\n                  config.baseUrl+'/gates/resetapi',{\n                      method: 'PATCH',\n        \n                      body: JSON.stringify(\n        \n                        { id:rowData._id}\n        \n                      ),\n                          headers:{\n                            \n                            'Access-Control-Allow-Origin': \"*\",\n                            'Access-Control-Allow-Headers': \"*\",\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                          }   \n                         }\n                )    \n                const newApiKey=await res.json()  \n                console.log(newApiKey);\n                setcdata(newApiKey)\n                window.location.reload()\n                \n              } catch (err) {\n                console.log(err);\n              }\n\n              //--------------------------------\n              \n      \n              },\n              disabled: checkAccess(rowData['creator'])\n        \n            }),\n            rowData => ( {\n              icon: () => <img style={{width:'1.25rem'}} src={copyIcon} />,\n              tooltip: 'copy apikey',\n              onClick: (event, rowData) => {\n              navigator.clipboard.writeText(JSON.stringify({apiKey:rowData.apiKey,topic:rowData.topic}))\n              setcdata(rowData)\n              setsopen(true)\n      \n              }\n        \n            }),\n\n            {\n              icon: refresh,\n              tooltip: 'Refresh Data',\n              isFreeAction: true,\n              onClick: () => window.location.reload()\n            }\n           \n          ]}\n\n          components={{\n            Toolbar: props => (\n              <div>\n                <MTableToolbar {...props} />\n                <div className=\"adduserbtn-container\">\n                  <button className=\"adduser-btn\" onClick={()=>{handleOpen()}}>+ add gate</button>\n           \n                </div>\n              </div>\n            )\n          }\n        }\n\n        options={{\n          exportButton: true\n        }}\n\n\n           />\n           </div>\n\n\n           <Modal\n            open={open}\n            onClose={handleClose}\n            style={{backgroundColor: 'rgba(0,0,0,0.9)'}}\n            \n\n           >\n            <AddGate handleClose={handleClose} edata={editdata} editmode={editmode}/>\n           </Modal>\n\n\n   \n            <Modal \n               open={dopen}\n               onClose={handleClose}\n               style={{backgroundColor: 'rgba(0,0,0,0.9)'}}\n            \n            >\n              <DeleteGate ddata={ddata} close={handleClose} />\n            </Modal>\n\n            <Snackbar open={sopen} autoHideDuration={1000}  onClose={handleSnackClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n              <Alert  severity=\"success\" color=\"info\">\n                Successfully Copied!\n              </Alert>\n            </Snackbar>\n             \n        </div>\n    )\n}\n\n// createdAt: \"2020-11-27T13:17:10.117Z\"\n// email: \"m@google.com\"\n// id: \"5fc0fc567fa94525beb23b27\"\n// updatedAt: \"2020-11-27T13:17:10.117Z\"\n// __v: 0\n// _id: \"5fc0fc567fa94525beb23b27\"\n","/home/mhdi/Desktop/unip/client/src/components/util/card/Card.js",["240"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Card.css'\n\nexport const Card = ({image,imageSize='33%',name,title='',link='/'}) => {\n    return (\n        <div className=\"card\">\n            <div className=\"cardImg-container\" >\n                <img src={image} style={{width:imageSize}}/>\n            </div>\n             <p>{title}</p>\n             <Link to={link}>\n             <button className=\"card-btn\">\n                 {name}\n             </button>\n             </Link>\n\n        </div>\n    )\n}\n","/home/mhdi/Desktop/unip/client/src/components/admin/AdminPanel.js",[],"/home/mhdi/Desktop/unip/client/src/components/admin/users/deleteuser/DeleteUser.js",["241"],"import React, { useState } from 'react'\nimport './DeleteUser.css'\nimport deleteIcon from './delete.svg';\nimport config from './../../../../config/config'\nimport { Button } from '@material-ui/core';\nexport const DeleteUser = ({ddata,close}) => {\n    const [msg, setmsg] = useState()\n   const handleDelete=async()=>{\n       \n    try {\n        const res = await fetch(\n          config.baseUrl+'/users',{\n              method: 'delete',\n            //   mode : 'cors',\n              body: JSON.stringify(\n\n                {      \n                    id: ddata._id,\n           \n                        \n                    }\n\n              ),\n                  headers:{\n                    // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n                    'Access-Control-Allow-Origin': \"*\",\n                    'Access-Control-Allow-Headers': \"*\",\n                      'Content-Type': 'application/json',\n                      'x-auth-token': localStorage.getItem('token')\n                  }   \n                 }\n        )    \n        const data=await res.json()  \n        console.log('----Delete----')\n        console.log(data)\n        console.log('----------------')\n     \n        if (data.msg ){\n            setmsg(data.msg) \n          \n        }else{\n            \n            setmsg(data.msg) \n\n        }\n\n\n      } catch (err) {\n        setmsg(err) \n      }\n  \n   }\n    return (\n        <div className=\"deleteuser-container\">\n            <div className=\"deleteIcon-container\">\n               <img src={deleteIcon} className=\"deleteIcon\" />\n            </div>\n            <p >Delete User</p>\n    <p>Are you sure to delete <span style={{color:'red'}}>{ddata.firstName +' '+ddata.lastName}</span>?</p>\n    <p style={{color:'green'}}>{msg}</p>\n    <div className=\"deleteuser-button-container\">\n                    <Button style={{padding: '10px 30px'}}variant=\"contained\" color=\"secondary\" onClick={close}>\n                    Cansel\n                    </Button>\n                    <Button  variant=\"contained\" style={{background:'var(--color-green)',color:'white', marginLeft:'2rem'  , padding: '10px 30px',\n                        fontSize: '0.875rem',\n                        minWidth: '64px'}} \n                        onClick={handleDelete}\n                        >\n                      Delete\n                    </Button>\n            </div>\n    \n        </div>\n    )\n}\n","/home/mhdi/Desktop/unip/client/src/components/admin/users/resetpassword/ResetPassword.js",["242","243","244"],{"ruleId":"245","severity":1,"message":"246","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":17},{"ruleId":"245","severity":1,"message":"249","line":34,"column":19,"nodeType":"247","messageId":"248","endLine":34,"endColumn":30},{"ruleId":"250","severity":1,"message":"251","line":80,"column":19,"nodeType":"252","messageId":"253","endLine":80,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":177,"column":8,"nodeType":"256","messageId":"257","endLine":177,"endColumn":24},{"ruleId":"258","severity":1,"message":"259","line":204,"column":69,"nodeType":"260","messageId":"261","endLine":204,"endColumn":71},{"ruleId":"258","severity":1,"message":"259","line":206,"column":52,"nodeType":"260","messageId":"261","endLine":206,"endColumn":54},{"ruleId":"258","severity":1,"message":"259","line":207,"column":50,"nodeType":"260","messageId":"261","endLine":207,"endColumn":52},{"ruleId":"258","severity":1,"message":"259","line":208,"column":48,"nodeType":"260","messageId":"261","endLine":208,"endColumn":50},{"ruleId":"258","severity":1,"message":"259","line":213,"column":69,"nodeType":"260","messageId":"261","endLine":213,"endColumn":71},{"ruleId":"258","severity":1,"message":"259","line":219,"column":69,"nodeType":"260","messageId":"261","endLine":219,"endColumn":71},{"ruleId":"258","severity":1,"message":"259","line":226,"column":69,"nodeType":"260","messageId":"261","endLine":226,"endColumn":71},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"245","severity":1,"message":"266","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":26},{"ruleId":"245","severity":1,"message":"267","line":1,"column":28,"nodeType":"247","messageId":"248","endLine":1,"endColumn":36},{"ruleId":"245","severity":1,"message":"268","line":5,"column":10,"nodeType":"247","messageId":"248","endLine":5,"endColumn":18},{"ruleId":"269","severity":1,"message":"270","line":18,"column":21,"nodeType":"271","endLine":18,"endColumn":42},{"ruleId":"258","severity":1,"message":"272","line":24,"column":59,"nodeType":"260","messageId":"261","endLine":24,"endColumn":61},{"ruleId":"258","severity":1,"message":"259","line":24,"column":86,"nodeType":"260","messageId":"261","endLine":24,"endColumn":88},{"ruleId":"262","replacedBy":"273"},{"ruleId":"264","replacedBy":"274"},{"ruleId":"269","severity":1,"message":"270","line":8,"column":15,"nodeType":"271","endLine":8,"endColumn":39},{"ruleId":"245","severity":1,"message":"267","line":2,"column":17,"nodeType":"247","messageId":"248","endLine":2,"endColumn":25},{"ruleId":"245","severity":1,"message":"275","line":21,"column":18,"nodeType":"247","messageId":"248","endLine":21,"endColumn":22},{"ruleId":"276","severity":1,"message":"277","line":44,"column":7,"nodeType":"256","endLine":44,"endColumn":13,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":3,"column":1,"nodeType":"281","endLine":6,"endColumn":2},{"ruleId":"245","severity":1,"message":"267","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":25},{"ruleId":"245","severity":1,"message":"282","line":4,"column":12,"nodeType":"247","messageId":"248","endLine":4,"endColumn":20},{"ruleId":"245","severity":1,"message":"283","line":9,"column":9,"nodeType":"247","messageId":"248","endLine":9,"endColumn":17},{"ruleId":"284","severity":1,"message":"285","line":10,"column":10,"nodeType":"286","messageId":"261","endLine":10,"endColumn":13},{"ruleId":"269","severity":1,"message":"270","line":60,"column":19,"nodeType":"271","endLine":60,"endColumn":66},{"ruleId":"245","severity":1,"message":"266","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":26},{"ruleId":"245","severity":1,"message":"287","line":19,"column":8,"nodeType":"247","messageId":"248","endLine":19,"endColumn":14},{"ruleId":"245","severity":1,"message":"288","line":22,"column":9,"nodeType":"247","messageId":"248","endLine":22,"endColumn":17},{"ruleId":"245","severity":1,"message":"289","line":25,"column":10,"nodeType":"247","messageId":"248","endLine":25,"endColumn":17},{"ruleId":"245","severity":1,"message":"290","line":32,"column":11,"nodeType":"247","messageId":"248","endLine":32,"endColumn":20},{"ruleId":"245","severity":1,"message":"291","line":32,"column":22,"nodeType":"247","messageId":"248","endLine":32,"endColumn":34},{"ruleId":"250","severity":1,"message":"251","line":84,"column":30,"nodeType":"292","messageId":"293","endLine":84,"endColumn":32},{"ruleId":"258","severity":1,"message":"259","line":93,"column":20,"nodeType":"260","messageId":"261","endLine":93,"endColumn":22},{"ruleId":"269","severity":1,"message":"270","line":166,"column":26,"nodeType":"271","endLine":166,"endColumn":72},{"ruleId":"276","severity":1,"message":"294","line":49,"column":12,"nodeType":"256","endLine":49,"endColumn":14,"suggestions":"295"},{"ruleId":"269","severity":1,"message":"270","line":56,"column":16,"nodeType":"271","endLine":56,"endColumn":63},{"ruleId":"245","severity":1,"message":"296","line":21,"column":15,"nodeType":"247","messageId":"248","endLine":21,"endColumn":20},{"ruleId":"269","severity":1,"message":"270","line":97,"column":33,"nodeType":"271","endLine":97,"endColumn":53},{"ruleId":"269","severity":1,"message":"270","line":108,"column":33,"nodeType":"271","endLine":108,"endColumn":53},{"ruleId":"269","severity":1,"message":"270","line":129,"column":23,"nodeType":"271","endLine":129,"endColumn":42},{"ruleId":"269","severity":1,"message":"270","line":140,"column":23,"nodeType":"271","endLine":140,"endColumn":45},{"ruleId":"269","severity":1,"message":"270","line":161,"column":29,"nodeType":"271","endLine":161,"endColumn":66},{"ruleId":"269","severity":1,"message":"270","line":172,"column":27,"nodeType":"271","endLine":172,"endColumn":50},{"ruleId":"262","replacedBy":"297"},{"ruleId":"264","replacedBy":"298"},{"ruleId":"284","severity":1,"message":"285","line":17,"column":10,"nodeType":"286","messageId":"261","endLine":17,"endColumn":12},{"ruleId":"269","severity":1,"message":"270","line":65,"column":19,"nodeType":"271","endLine":65,"endColumn":38},{"ruleId":"269","severity":1,"message":"270","line":77,"column":19,"nodeType":"271","endLine":77,"endColumn":56},{"ruleId":"276","severity":1,"message":"299","line":25,"column":8,"nodeType":"256","endLine":25,"endColumn":39,"suggestions":"300"},{"ruleId":"245","severity":1,"message":"301","line":11,"column":18,"nodeType":"247","messageId":"248","endLine":11,"endColumn":26},{"ruleId":"245","severity":1,"message":"296","line":12,"column":15,"nodeType":"247","messageId":"248","endLine":12,"endColumn":20},{"ruleId":"258","severity":1,"message":"259","line":18,"column":13,"nodeType":"260","messageId":"261","endLine":18,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":85,"column":33,"nodeType":"271","endLine":85,"endColumn":52},{"ruleId":"269","severity":1,"message":"270","line":8,"column":15,"nodeType":"271","endLine":8,"endColumn":39},{"ruleId":"245","severity":1,"message":"302","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":17},{"ruleId":"276","severity":1,"message":"303","line":19,"column":15,"nodeType":"292","endLine":32,"endColumn":6},{"ruleId":"258","severity":1,"message":"259","line":21,"column":28,"nodeType":"260","messageId":"261","endLine":21,"endColumn":30},{"ruleId":"258","severity":1,"message":"259","line":23,"column":34,"nodeType":"260","messageId":"261","endLine":23,"endColumn":36},{"ruleId":"258","severity":1,"message":"259","line":25,"column":34,"nodeType":"260","messageId":"261","endLine":25,"endColumn":36},{"ruleId":"258","severity":1,"message":"259","line":27,"column":34,"nodeType":"260","messageId":"261","endLine":27,"endColumn":36},{"ruleId":"269","severity":1,"message":"270","line":39,"column":18,"nodeType":"271","endLine":39,"endColumn":93},{"ruleId":"258","severity":1,"message":"259","line":39,"column":58,"nodeType":"260","messageId":"261","endLine":39,"endColumn":60},{"ruleId":"258","severity":1,"message":"259","line":45,"column":53,"nodeType":"260","messageId":"261","endLine":45,"endColumn":55},{"ruleId":"269","severity":1,"message":"270","line":51,"column":17,"nodeType":"271","endLine":51,"endColumn":86},{"ruleId":"258","severity":1,"message":"259","line":51,"column":57,"nodeType":"260","messageId":"261","endLine":51,"endColumn":59},{"ruleId":"269","severity":1,"message":"270","line":61,"column":17,"nodeType":"271","endLine":61,"endColumn":89},{"ruleId":"258","severity":1,"message":"259","line":61,"column":57,"nodeType":"260","messageId":"261","endLine":61,"endColumn":59},{"ruleId":"245","severity":1,"message":"304","line":34,"column":18,"nodeType":"247","messageId":"248","endLine":34,"endColumn":25},{"ruleId":"245","severity":1,"message":"305","line":79,"column":21,"nodeType":"247","messageId":"248","endLine":79,"endColumn":26},{"ruleId":"258","severity":1,"message":"259","line":81,"column":10,"nodeType":"260","messageId":"261","endLine":81,"endColumn":12},{"ruleId":"276","severity":1,"message":"306","line":162,"column":4,"nodeType":"256","endLine":162,"endColumn":18,"suggestions":"307"},{"ruleId":"254","severity":1,"message":"255","line":162,"column":4,"nodeType":"256","messageId":"257","endLine":162,"endColumn":18},{"ruleId":"245","severity":1,"message":"289","line":34,"column":10,"nodeType":"247","messageId":"248","endLine":34,"endColumn":17},{"ruleId":"245","severity":1,"message":"308","line":39,"column":11,"nodeType":"247","messageId":"248","endLine":39,"endColumn":16},{"ruleId":"245","severity":1,"message":"290","line":41,"column":11,"nodeType":"247","messageId":"248","endLine":41,"endColumn":20},{"ruleId":"245","severity":1,"message":"291","line":41,"column":22,"nodeType":"247","messageId":"248","endLine":41,"endColumn":34},{"ruleId":"250","severity":1,"message":"251","line":75,"column":29,"nodeType":"292","messageId":"293","endLine":75,"endColumn":31},{"ruleId":"258","severity":1,"message":"259","line":83,"column":19,"nodeType":"260","messageId":"261","endLine":83,"endColumn":21},{"ruleId":"269","severity":1,"message":"270","line":163,"column":26,"nodeType":"271","endLine":163,"endColumn":72},{"ruleId":"269","severity":1,"message":"270","line":214,"column":27,"nodeType":"271","endLine":214,"endColumn":75},{"ruleId":"269","severity":1,"message":"270","line":9,"column":17,"nodeType":"271","endLine":9,"endColumn":61},{"ruleId":"269","severity":1,"message":"270","line":56,"column":16,"nodeType":"271","endLine":56,"endColumn":63},{"ruleId":"258","severity":1,"message":"259","line":16,"column":13,"nodeType":"260","messageId":"261","endLine":16,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":69,"column":29,"nodeType":"271","endLine":69,"endColumn":66},{"ruleId":"269","severity":1,"message":"270","line":79,"column":29,"nodeType":"271","endLine":79,"endColumn":66},"no-unused-vars","'CheckIcon' is defined but never used.","Identifier","unusedVar","'isConnected' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["309"],"no-negated-in-lhs",["310"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useFetch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.",["309"],["310"],"'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["311"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Redirect' is defined but never used.","'location' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'config' is defined but never used.","'tableRef' is assigned a value but never used.","'history' is assigned a value but never used.","'modalbody' is assigned a value but never used.","'setmodalbody' is assigned a value but never used.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["312"],"'setid' is assigned a value but never used.",["309"],["310"],"React Hook React.useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["313"],"'setcname' is assigned a value but never used.","'usericonb' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'setdata' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array. You can also do a functional update 'setoptions(o => ...)' if you only need 'options' in the 'setoptions' call.",["314"],"'cdata' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [auth, dispatch]",{"range":"323","text":"324"},"Update the dependencies array to be: [url]",{"range":"325","text":"326"},"Update the dependencies array to be: [serverUrl, topic, isConnected, options]",{"range":"327","text":"328"},"Update the dependencies array to be: [currentUser, options]",{"range":"329","text":"330"},[1170,1176],"[auth, dispatch]",[1394,1396],"[url]",[880,911],"[serverUrl, topic, isConnected, options]",[4342,4356],"[currentUser, options]"]